TAR__clib_malloc_heap_size      = $FFFFFFFF ; L zcc57513
__clib_malloc_heap_size         = $FFFFFFFF ; L zcc57513
CLIB_OPT_STDIO                  = $0000 ; L zcc57513
IOCTL_RESET                     = $0000 ; G zcc57513
STDIO_SEEK_SET                  = $0000 ; G zcc57513
TAR__clib_balloc_table_size     = $0000 ; L zcc57513
TAR__clib_exit_stack_size       = $0000 ; L zcc57513
TAR__clib_fopen_max             = $0000 ; L zcc57513
TAR__clib_open_max              = $0000 ; L zcc57513
TAR__clib_quickexit_stack_size  = $0000 ; L zcc57513
TAR__crt_enable_commandline     = $0000 ; L zcc57513
TAR__crt_enable_nmi             = $0000 ; L zcc57513
TAR__crt_enable_restart         = $0000 ; L zcc57513
TAR__crt_enable_rst             = $0000 ; L zcc57513
TAR__crt_include_preamble       = $0000 ; L zcc57513
TAR__crt_initialize_bss         = $0000 ; L zcc57513
TAR__crt_model                  = $0000 ; L zcc57513
TAR__crt_org_bss                = $0000 ; L zcc57513
TAR__crt_org_data               = $0000 ; L zcc57513
__BSS_END_size                  = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_ebdfd_zc
__CLIB_OPT_ERROR                = $0000 ; L error_einval_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enolck_zc
__CLIB_OPT_ERROR                = $0000 ; L error_enotsup_mc
__CLIB_OPT_ERROR                = $0000 ; L error_enotsup_zc
__CLIB_OPT_FASTCOPY             = $0000 ; L asm_memset
__CLIB_OPT_MULTITHREAD          = $0000 ; L asm_vioctl
__CODE_END_size                 = $0000 ; G 
__CRTDEF                        = $0000 ; L zcc57513
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G zcc57513
__MMAP                          = $0000 ; L zcc57513
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_compiler_size             = $0000 ; G 
__bss_compress_aplib_size       = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_stdio_size                = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L zcc57513
__clib_exit_stack_size          = $0000 ; L zcc57513
__clib_fopen_max                = $0000 ; L zcc57513
__clib_open_max                 = $0000 ; L zcc57513
__clib_quickexit_stack_size     = $0000 ; L zcc57513
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_aplib_size      = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_common_size          = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sccz80_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_math_size                = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_stdlib_size              = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_user_size                = $0000 ; G 
__crt_enable_commandline        = $0000 ; L zcc57513
__crt_enable_restart            = $0000 ; L zcc57513
__crt_include_preamble          = $0000 ; L zcc57513
__crt_initialize_bss            = $0000 ; L zcc57513
__crt_model                     = $0000 ; L zcc57513
__crt_org_bss                   = $0000 ; L zcc57513
__crt_org_data                  = $0000 ; L zcc57513
__data_alloc_balloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_compiler_size            = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G zcc57513
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G zcc57513
__rodata_clib_size              = $0000 ; G 
__rodata_compiler_size          = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
startup                         = $0000 ; L zcc57513
thrd_success                    = $0000 ; G zcc57513
DEFINED_CLIB_OPT_STDIO          = $0001 ; L zcc57513
STDIO_MSG_PUTC                  = $0001 ; G zcc57513
STDIO_SEEK_CUR                  = $0001 ; G zcc57513
TAR__crt_enable_close           = $0001 ; L zcc57513
TAR__crt_enable_eidi            = $0001 ; L zcc57513
_CLIB_CFG_ASM_                  = $0001 ; L asm_memset
_CLIB_CFG_ASM_                  = $0001 ; L asm_vioctl
_CLIB_CFG_ASM_                  = $0001 ; L character_00_input_stdio_msg_read
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_proc_echo
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_proc_getc
_CLIB_CFG_ASM_                  = $0001 ; L console_01_input_terminal_fdriver
_CLIB_CFG_ASM_                  = $0001 ; L console_01_output_char_iterm_msg_putc
_CLIB_CFG_ASM_                  = $0001 ; L console_01_output_char_oterm_msg_putc
_CLIB_CFG_ASM_                  = $0001 ; L error_ebdfd_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_einval_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enolck_zc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_mc
_CLIB_CFG_ASM_                  = $0001 ; L error_enotsup_zc
_CLIB_CFG_ASM_                  = $0001 ; L zx_01_input_inkey_iterm_msg_getc
_CLIB_CFG_ASM_                  = $0001 ; L zx_01_output_char_32_iterm_msg_print_cursor
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_bit_beep_raw
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_bit_close
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_bit_open
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_z80_delay_ms
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_z80_pop_ei
_CLIB_TARGET_CFG_ASM_           = $0001 ; L asm_z80_push_di
_CLIB_TARGET_CFG_ASM_           = $0001 ; L zx_01_output_char_32_iterm_msg_bell
_CLIB_TARGET_CFG_ASM_           = $0001 ; L zx_01_output_char_32_oterm_msg_bell
__BSS_size                      = $0001 ; G 
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G zcc57513
__crt_enable_close              = $0001 ; L zcc57513
__crt_enable_eidi               = $0001 ; L zcc57513
__data_sound_bit_size           = $0001 ; G 
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
__sound_bit_method              = $0001 ; L asm_bit_beep_raw
__z80_cpu_info                  = $0001 ; L asm_z80_pop_ei
__z80_cpu_info                  = $0001 ; L asm_z80_push_di
mtx_plain                       = $0001 ; G zcc57513
thrd_error                      = $0001 ; G zcc57513
STDIO_MSG_WRIT                  = $0002 ; G zcc57513
STDIO_SEEK_END                  = $0002 ; G zcc57513
__BSS_UNINITIALIZED_size        = $0002 ; G 
__EBADF                         = $0002 ; G zcc57513
__bss_error_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
__code_compiler_size            = $0002 ; G 
__data_alloc_malloc_size        = $0002 ; G 
__data_fcntl_size               = $0002 ; G 
__data_fcntl_stdio_heap_tail_size = $0002 ; G 
mtx_recursive                   = $0002 ; G zcc57513
thrd_nomem                      = $0002 ; G zcc57513
STDIO_MSG_GETC                  = $0003 ; G zcc57513
__EBDFD                         = $0003 ; G zcc57513
__fcntl_fdtbl_size              = $0003 ; G zcc57513
CHAR_CTRL_D                     = $0004 ; L zx_01_input_inkey_iterm_msg_getc
STDIO_MSG_EATC                  = $0004 ; G zcc57513
__EDOM                          = $0004 ; G zcc57513
__code_crt_main_size            = $0004 ; G 
__sound_bit_toggle_pos          = $0004 ; L asm_bit_beep_raw
mtx_timed                       = $0004 ; G zcc57513
thrd_busy                       = $0004 ; G zcc57513
STDIO_MSG_READ                  = $0005 ; G zcc57513
__EFBIG                         = $0005 ; G zcc57513
CHAR_CAPS                       = $0006 ; L console_01_input_proc_getc
STDIO_MSG_SEEK                  = $0006 ; G zcc57513
__EINVAL                        = $0006 ; G zcc57513
__data_fcntl_fdtable_body_size  = $0006 ; G 
__data_fcntl_stdio_heap_head_size = $0006 ; G 
CHAR_BELL                       = $0007 ; L console_01_output_char_oterm_msg_putc
STDIO_MSG_ICTL                  = $0007 ; G zcc57513
TAR__crt_enable_streams         = $0007 ; L zcc57513
__EMFILE                        = $0007 ; G zcc57513
STDIO_MSG_FLSH                  = $0008 ; G zcc57513
__ENFILE                        = $0008 ; G zcc57513
thrd_timedout                   = $0008 ; G zcc57513
STDIO_MSG_CLOS                  = $0009 ; G zcc57513
__ENOLCK                        = $0009 ; G zcc57513
__code_ctype_size               = $0009 ; G 
CHAR_CR                         = $000A ; L console_01_input_proc_getc
CHAR_CR                         = $000A ; L console_01_output_char_oterm_msg_putc
CHAR_CR                         = $000A ; L zx_01_input_inkey_iterm_msg_getc
__ENOMEM                        = $000A ; G zcc57513
__ENOTSUP                       = $000B ; G zcc57513
CHAR_BS                         = $000C ; L console_01_input_proc_getc
__CODE_size                     = $000C ; G 
__EOVERFLOW                     = $000C ; G zcc57513
CHAR_LF                         = $000D ; L character_00_input_stdio_msg_read
CHAR_LF                         = $000D ; L console_01_input_proc_getc
CHAR_LF                         = $000D ; L console_01_output_char_iterm_msg_putc
CHAR_LF                         = $000D ; L console_01_output_char_oterm_msg_putc
CHAR_LF                         = $000D ; L zx_01_input_inkey_iterm_msg_getc
__ERANGE                        = $000D ; G zcc57513
__ESTAT                         = $000E ; G zcc57513
__code_crt_return_size          = $000E ; G 
ICHAR_MSG_GETC                  = $000F ; G zcc57513
ITERM_MSG_GETC                  = $000F ; G zcc57513
__EAGAIN                        = $000F ; G zcc57513
__EWOULDBLOCK                   = $000F ; G zcc57513
ITERM_MSG_INTERRUPT             = $0010 ; G zcc57513
__code_stdio_size               = $0010 ; G 
__sound_bit_toggle              = $0010 ; L asm_bit_beep_raw
ITERM_MSG_PUTC                  = $0011 ; G zcc57513
__code_string_size              = $0011 ; G 
ITERM_MSG_PRINT_CURSOR          = $0012 ; G zcc57513
ITERM_MSG_ERASE_CURSOR          = $0013 ; G zcc57513
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G zcc57513
ITERM_MSG_BS                    = $0015 ; G zcc57513
ITERM_MSG_BS_PWD                = $0016 ; G zcc57513
ITERM_MSG_READLINE_BEGIN        = $0017 ; G zcc57513
__sound_bit_read_mask           = $0017 ; L asm_bit_open
ITERM_MSG_READLINE_END          = $0018 ; G zcc57513
ITERM_MSG_BELL                  = $0019 ; G zcc57513
CHAR_ESC                        = $001B ; L console_01_input_proc_getc
OCHAR_MSG_PUTC_BIN              = $001E ; G zcc57513
OTERM_MSG_PUTC                  = $001E ; G zcc57513
OTERM_MSG_TTY                   = $001F ; G zcc57513
__code_threads_mutex_size       = $001F ; G 
OCHAR_MSG_PUTC                  = $0020 ; G zcc57513
OTERM_MSG_PRINTC                = $0020 ; G zcc57513
OTERM_MSG_SCROLL                = $0021 ; G zcc57513
OTERM_MSG_CLS                   = $0022 ; G zcc57513
__code_alloc_malloc_size        = $0022 ; G 
OTERM_MSG_PAUSE                 = $0023 ; G zcc57513
OTERM_MSG_BELL                  = $0024 ; G zcc57513
__code_crt_init_size            = $0024 ; G 
OTERM_MSG_PSCROLL               = $0025 ; G zcc57513
__code_driver_general_size      = $0025 ; G 
CHAR_PASSWORD                   = $002A ; L console_01_input_proc_echo
CHAR_PASSWORD                   = $002A ; L console_01_input_proc_getc
CHAR_CURSOR_UC                  = $002D ; L console_01_input_proc_getc
CHAR_CURSOR_UC                  = $002D ; L zx_01_output_char_32_iterm_msg_print_cursor
__data_stdio_size               = $0039 ; G 
__code_adt_b_array_size         = $003B ; G 
__code_error_size               = $0042 ; G 
__code_l_size                   = $0056 ; G 
__code_sound_bit_size           = $005A ; G 
CHAR_CURSOR_LC                  = $005F ; L console_01_input_proc_getc
__code_z80_size                 = $005F ; G 
__code_driver_character_input_size = $006E ; G 
__code_input_size               = $009B ; G 
__code_fcntl_size               = $009C ; G 
__rodata_input_size             = $00A0 ; G 
__sound_bit_write_mask          = $00E8 ; L asm_bit_close
__data_fcntl_stdio_heap_body_size = $00F8 ; G 
__sound_bit_port                = $00FE ; L asm_bit_beep_raw
TAR__clib_stdio_heap_size       = $0100 ; L zcc57513
__clib_stdio_heap_size          = $0100 ; L zcc57513
IOCTL_OTERM_CLS                 = $0102 ; G zcc57513
__code_arch_size                = $0109 ; G 
TAR__crt_stack_size             = $0200 ; L zcc57513
__crt_stack_size                = $0200 ; L zcc57513
IOCTL_ITERM_TIE                 = $0201 ; G zcc57513
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G zcc57513
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G zcc57513
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G zcc57513
__code_driver_terminal_input_size = $0344 ; G 
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G zcc57513
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G zcc57513
__code_driver_terminal_output_size = $038C ; G 
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G zcc57513
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G zcc57513
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G zcc57513
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G zcc57513
IOCTL_OTERM_GET_OTERM           = $0602 ; G zcc57513
IOCTL_OTERM_SCROLL              = $0702 ; G zcc57513
IOCTL_OTERM_FONT                = $0802 ; G zcc57513
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G zcc57513
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G zcc57513
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G zcc57513
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G zcc57513
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G zcc57513
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G zcc57513
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G zcc57513
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G zcc57513
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G zcc57513
IOCTL_ITERM_SET_DELAY           = $1001 ; G zcc57513
IOCTL_OTERM_FCOLOR              = $1002 ; G zcc57513
IOCTL_ITERM_GET_DELAY           = $1081 ; G zcc57513
__BANK_06_size                  = $10BD ; G 
IOCTL_ITERM_LASTK               = $1101 ; G zcc57513
IOCTL_OTERM_FMASK               = $1102 ; G zcc57513
IOCTL_OTERM_BCOLOR              = $1202 ; G zcc57513
CRT_FONT                        = $3D00 ; G zcc57513
_font_8x8_rom                   = $3D00 ; G _font_8x8_rom
TAR__crt_org_code               = $8000 ; L zcc57513
__CODE_head                     = $8000 ; G 
__Start                         = $8000 ; G zcc57513
__crt_org_code                  = $8000 ; L zcc57513
__Restart                       = $8009 ; L zcc57513
__CODE_tail                     = $800C ; G 
__Restart_2                     = $800C ; L zcc57513
__code_crt_init_head            = $800C ; G 
__code_crt_init_tail            = $8030 ; G 
__code_crt_main_head            = $8030 ; G 
__Exit                          = $8033 ; G zcc57513
__code_crt_exit_head            = $8034 ; G 
__code_crt_exit_tail            = $8034 ; G 
__code_crt_main_tail            = $8034 ; G 
__code_crt_return_head          = $8034 ; G 
__code_adt_b_array_head         = $8042 ; G 
__code_clib_head                = $8042 ; G 
__code_clib_tail                = $8042 ; G 
__code_crt_common_head          = $8042 ; G 
__code_crt_common_tail          = $8042 ; G 
__code_crt_return_tail          = $8042 ; G 
__code_driver_head              = $8042 ; G 
__code_driver_tail              = $8042 ; G 
__code_font_head                = $8042 ; G 
__code_font_tail                = $8042 ; G 
asm_b_array_at                  = $8042 ; G asm_b_array_at
asm_b_array_append              = $804D ; G asm_b_array_append
asm_b_array_push_back           = $804D ; G asm_b_array_push_back
asm0_b_array_append             = $804F ; G asm_b_array_append
room_available                  = $805D ; L asm_b_array_append
__array_at                      = $806D ; G __array_at
__code_adt_b_array_tail         = $807D ; G 
__code_adt_b_vector_head        = $807D ; G 
__code_adt_b_vector_tail        = $807D ; G 
__code_adt_ba_priority_queue_head = $807D ; G 
__code_adt_ba_priority_queue_tail = $807D ; G 
__code_adt_ba_stack_head        = $807D ; G 
__code_adt_ba_stack_tail        = $807D ; G 
__code_adt_bv_priority_queue_head = $807D ; G 
__code_adt_bv_priority_queue_tail = $807D ; G 
__code_adt_bv_stack_head        = $807D ; G 
__code_adt_bv_stack_tail        = $807D ; G 
__code_adt_p_forward_list_alt_head = $807D ; G 
__code_adt_p_forward_list_alt_tail = $807D ; G 
__code_adt_p_forward_list_head  = $807D ; G 
__code_adt_p_forward_list_tail  = $807D ; G 
__code_adt_p_list_head          = $807D ; G 
__code_adt_p_list_tail          = $807D ; G 
__code_adt_p_queue_head         = $807D ; G 
__code_adt_p_queue_tail         = $807D ; G 
__code_adt_p_stack_head         = $807D ; G 
__code_adt_p_stack_tail         = $807D ; G 
__code_adt_w_array_head         = $807D ; G 
__code_adt_w_array_tail         = $807D ; G 
__code_adt_w_vector_head        = $807D ; G 
__code_adt_w_vector_tail        = $807D ; G 
__code_adt_wa_priority_queue_head = $807D ; G 
__code_adt_wa_priority_queue_tail = $807D ; G 
__code_adt_wa_stack_head        = $807D ; G 
__code_adt_wa_stack_tail        = $807D ; G 
__code_adt_wv_priority_queue_head = $807D ; G 
__code_adt_wv_priority_queue_tail = $807D ; G 
__code_adt_wv_stack_head        = $807D ; G 
__code_adt_wv_stack_tail        = $807D ; G 
__code_alloc_balloc_head        = $807D ; G 
__code_alloc_balloc_tail        = $807D ; G 
__code_alloc_malloc_head        = $807D ; G 
asm_heap_init                   = $807D ; G asm_heap_init
__code_alloc_malloc_tail        = $809F ; G 
__code_alloc_obstack_head       = $809F ; G 
__code_alloc_obstack_tail       = $809F ; G 
__code_arch_head                = $809F ; G 
asm_zx_cls_wc                   = $809F ; G asm_zx_cls_wc
pixel_loop_0                    = $80AD ; L asm_zx_cls_wc
pixel_loop_1                    = $80AF ; L asm_zx_cls_wc
attr_loop                       = $80CA ; L asm_zx_cls_wc
asm_zx_cyx2saddr                = $80DC ; G asm_zx_cyx2saddr
asm_zx_saddr2aaddr              = $80EB ; G asm_zx_saddr2aaddr
asm_zx_saddrpdown               = $80F5 ; G asm_zx_saddrpdown
asm0_zx_saddrpdown              = $80F6 ; G asm_zx_saddrpdown
asm_zx_scroll_wc_up_noexx       = $810B ; G asm_zx_scroll_wc_up_noexx
asm_zx_scroll_wc_up             = $8118 ; G asm_zx_scroll_wc_up
copy_up_loop_0                  = $8150 ; L asm_zx_scroll_wc_up
copy_up_loop_1                  = $8164 ; L asm_zx_scroll_wc_up
vacate_loop_0                   = $8183 ; L asm_zx_scroll_wc_up
vacate_loop_1                   = $8192 ; L asm_zx_scroll_wc_up
__code_arch_tail                = $81A8 ; G 
__code_bifrost2_head            = $81A8 ; G 
__code_bifrost2_tail            = $81A8 ; G 
__code_bifrost_h_head           = $81A8 ; G 
__code_bifrost_h_tail           = $81A8 ; G 
__code_bifrost_l_head           = $81A8 ; G 
__code_bifrost_l_tail           = $81A8 ; G 
__code_compress_aplib_head      = $81A8 ; G 
__code_compress_aplib_tail      = $81A8 ; G 
__code_compress_zx7_head        = $81A8 ; G 
__code_compress_zx7_tail        = $81A8 ; G 
__code_ctype_head               = $81A8 ; G 
asm_toupper                     = $81A8 ; G asm_toupper
__code_ctype_tail               = $81B1 ; G 
__code_driver_general_head      = $81B1 ; G 
console_01_input_terminal_fdriver = $81B1 ; G console_01_input_terminal_fdriver
console_01_output_terminal_fdriver = $81B1 ; G console_01_output_terminal_fdriver
device_return_error             = $81B9 ; G device_return_error
device_set_error                = $81C0 ; G device_set_error
console_01_input_proc_reset     = $81CD ; G console_01_input_proc_reset
device_reset_error              = $81CD ; G device_reset_error
__code_driver_character_input_head = $81D6 ; G 
__code_driver_general_tail      = $81D6 ; G 
character_00_input_stdio_msg_eatc = $81D6 ; G character_00_input_stdio_msg_eatc
console_01_input_stdio_msg_eatc = $81D6 ; G console_01_input_stdio_msg_eatc
eatc_loop                       = $81DB ; L character_00_input_stdio_msg_eatc
eatc_exit                       = $81F5 ; L character_00_input_stdio_msg_eatc
character_00_input_stdio_msg_read = $81F8 ; G character_00_input_stdio_msg_read
console_01_input_stdio_msg_read = $81F8 ; G console_01_input_stdio_msg_read
read_loop                       = $81F9 ; L character_00_input_stdio_msg_read
read_exit                       = $820F ; L character_00_input_stdio_msg_read
read_exit_error                 = $8217 ; L character_00_input_stdio_msg_read
character_00_input_stdio_msg_seek = $8222 ; G character_00_input_stdio_msg_seek
console_01_input_stdio_msg_seek = $8222 ; G console_01_input_stdio_msg_seek
seek_loop                       = $822E ; L character_00_input_stdio_msg_seek
__code_driver_character_input_tail = $8244 ; G 
__code_driver_character_output_head = $8244 ; G 
__code_driver_character_output_tail = $8244 ; G 
__code_driver_memstream_head    = $8244 ; G 
__code_driver_memstream_tail    = $8244 ; G 
__code_driver_terminal_input_head = $8244 ; G 
zx_01_input_kbd_inkey           = $8244 ; G zx_01_input_kbd_inkey
console_01_input_terminal       = $8256 ; G console_01_input_terminal
console_01_input_stdio_msg_flsh = $8281 ; G console_01_input_stdio_msg_flsh
zx_01_input_inkey_stdio_msg_flsh = $8281 ; G zx_01_input_inkey_stdio_msg_flsh
console_01_input_proc_getc      = $8294 ; G console_01_input_proc_getc
console_01_input_stdio_msg_getc = $8294 ; G console_01_input_stdio_msg_getc
getc                            = $82A0 ; L console_01_input_proc_getc
char_mode                       = $82A6 ; L console_01_input_proc_getc
line_mode                       = $82B0 ; L console_01_input_proc_getc
line_mode_readline              = $82CA ; L console_01_input_proc_getc
push_loop                       = $82EA ; L console_01_input_proc_getc
put_raw_0                       = $82F5 ; L console_01_input_proc_getc
line_mode_readline_1            = $8300 ; L console_01_input_proc_getc
readline_loop                   = $8303 ; L console_01_input_proc_getc
cursor_print                    = $8319 ; L console_01_input_proc_getc
cursor_print_end                = $831E ; L console_01_input_proc_getc
cursor_not_pwd                  = $833F ; L console_01_input_proc_getc
cursor_erase_end                = $8343 ; L console_01_input_proc_getc
bell                            = $835C ; L console_01_input_proc_getc
not_empty                       = $8363 ; L console_01_input_proc_getc
not_password_mode               = $8376 ; L console_01_input_proc_getc
skip_bs                         = $837A ; L console_01_input_proc_getc
escaped_char                    = $8385 ; L console_01_input_proc_getc
put_raw                         = $839A ; L console_01_input_proc_getc
readline_done                   = $83AF ; L console_01_input_proc_getc
readline_error                  = $83AF ; L console_01_input_proc_getc
interrupt_received              = $83C2 ; L console_01_input_proc_getc
edit_buff_params                = $83C8 ; L console_01_input_proc_getc
line_mode_editbuf_1             = $83D0 ; L console_01_input_proc_getc
state_machine_0                 = $83DD ; L console_01_input_proc_getc
state_machine_1                 = $83ED ; L console_01_input_proc_getc
state_machine_2                 = $83FD ; L console_01_input_proc_getc
not_cr                          = $8408 ; L console_01_input_proc_getc
sm_cook                         = $840E ; L console_01_input_proc_getc
sm_capslock                     = $841F ; L console_01_input_proc_getc
sm_escape                       = $842E ; L console_01_input_proc_getc
sm_esc_exit                     = $8438 ; L console_01_input_proc_getc
sm_exit                         = $843A ; L console_01_input_proc_getc
console_01_input_proc_echo      = $843E ; G console_01_input_proc_echo
console_01_input_proc_oterm     = $844E ; G console_01_input_proc_echo
cont                            = $845B ; L console_01_input_proc_echo
console_01_input_stdio_msg_ictl = $8464 ; G console_01_input_stdio_msg_ictl
_ictl_messages                  = $847B ; L console_01_input_stdio_msg_ictl
console_01_input_stdio_msg_ictl_0 = $8488 ; G console_01_input_stdio_msg_ictl
_ioctl_getset_editbuf           = $8491 ; L console_01_input_stdio_msg_ictl
_ioctl_set_editbuf              = $849D ; L console_01_input_stdio_msg_ictl
_ioctl_get_editbuf              = $84A8 ; L console_01_input_stdio_msg_ictl
_ioctl_editbuf_copy             = $84AB ; L console_01_input_stdio_msg_ictl
_ioctl_tie                      = $84B2 ; L console_01_input_stdio_msg_ictl
_ioctl_tie_exit                 = $84C6 ; L console_01_input_stdio_msg_ictl
zx_01_input_inkey_iterm_msg_getc = $84C8 ; G zx_01_input_inkey_iterm_msg_getc
state_1                         = $84D2 ; L zx_01_input_inkey_iterm_msg_getc
state_1t_join                   = $84D5 ; L zx_01_input_inkey_iterm_msg_getc
state_2                         = $84E3 ; L zx_01_input_inkey_iterm_msg_getc
state_unknown                   = $84E8 ; L zx_01_input_inkey_iterm_msg_getc
state_3                         = $84EB ; L zx_01_input_inkey_iterm_msg_getc
getk_0                          = $84EF ; L zx_01_input_inkey_iterm_msg_getc
getk_1                          = $84F5 ; L zx_01_input_inkey_iterm_msg_getc
getk_loop                       = $84F7 ; L zx_01_input_inkey_iterm_msg_getc
debounce                        = $8500 ; L zx_01_input_inkey_iterm_msg_getc
state_1t                        = $850F ; L zx_01_input_inkey_iterm_msg_getc
key_pressed                     = $8512 ; L zx_01_input_inkey_iterm_msg_getc
exit                            = $8525 ; L zx_01_input_inkey_iterm_msg_getc
key_cr                          = $852A ; L zx_01_input_inkey_iterm_msg_getc
key_lf                          = $852E ; L zx_01_input_inkey_iterm_msg_getc
zx_01_input_inkey_proc_getk_address = $8532 ; G zx_01_input_inkey_proc_getk_address
zx_01_input_inkey_stdio_msg_ictl = $8538 ; G zx_01_input_inkey_stdio_msg_ictl
_ioctl_getset_delay             = $8550 ; L zx_01_input_inkey_stdio_msg_ictl
_ioctl_set_delay                = $855A ; L zx_01_input_inkey_stdio_msg_ictl
_ioctl_get_delay                = $856F ; L zx_01_input_inkey_stdio_msg_ictl
__code_driver_terminal_input_tail = $8588 ; G 
__code_driver_terminal_output_head = $8588 ; G 
zx_01_output_char_32            = $8588 ; G zx_01_output_char_32
console_01_output_terminal_char = $85B6 ; G console_01_output_terminal_char
console_01_output_terminal      = $85FD ; G console_01_output_terminal
console_01_output_stdio_msg_putc = $8619 ; G console_01_output_stdio_msg_putc
putc_loop                       = $861D ; L console_01_output_stdio_msg_putc
console_01_output_stdio_msg_writ = $862D ; G console_01_output_stdio_msg_writ
writ_loop                       = $862F ; L console_01_output_stdio_msg_writ
writ_end                        = $863D ; L console_01_output_stdio_msg_writ
console_01_output_char_iterm_msg_bs = $8641 ; G console_01_output_char_iterm_msg_bs
console_01_output_char_iterm_msg_putc = $8664 ; G console_01_output_char_iterm_msg_putc
console_01_output_char_iterm_msg_readline_begin = $8676 ; G console_01_output_char_iterm_msg_readline_begin
console_01_output_char_iterm_msg_readline_end = $867B ; G console_01_output_char_iterm_msg_readline_end
console_01_output_char_oterm_msg_putc = $8687 ; G console_01_output_char_oterm_msg_putc
putchar_bell                    = $8698 ; L console_01_output_char_oterm_msg_putc
cooked                          = $869C ; L console_01_output_char_oterm_msg_putc
console_01_output_char_oterm_msg_putc_raw = $86A8 ; G console_01_output_char_oterm_msg_putc
crlf_done                       = $86A8 ; L console_01_output_char_oterm_msg_putc
putchar_ok                      = $86AE ; L console_01_output_char_oterm_msg_putc
x_ok                            = $86BD ; L console_01_output_char_oterm_msg_putc
y_ok                            = $86D3 ; L console_01_output_char_oterm_msg_putc
console_01_output_char_proc_linefeed = $86E6 ; G console_01_output_char_proc_linefeed
y_ok_2                          = $86FC ; L console_01_output_char_proc_linefeed
console_01_output_char_proc_move_left = $8704 ; G console_01_output_char_proc_move_left
x_is_zero                       = $8711 ; L console_01_output_char_proc_move_left
check_y                         = $8717 ; L console_01_output_char_proc_move_left
console_01_output_char_proc_move_down = $871B ; G console_01_output_char_proc_move_down
console_01_output_char_proc_move_down_check_y = $8720 ; G console_01_output_char_proc_move_down
set_max_y                       = $8722 ; L console_01_output_char_proc_move_down
console_01_output_char_proc_putchar_scroll = $8725 ; G console_01_output_char_proc_putchar_scroll
pause_scroll                    = $873D ; L console_01_output_char_proc_putchar_scroll
scroll_immediate_0              = $8751 ; L console_01_output_char_proc_putchar_scroll
scroll_immediate                = $8754 ; L console_01_output_char_proc_putchar_scroll
scroll_it                       = $875A ; L console_01_output_char_proc_putchar_scroll
page_it                         = $8761 ; L console_01_output_char_proc_putchar_scroll
no_cls                          = $876C ; L console_01_output_char_proc_putchar_scroll
console_01_output_char_proc_reset_scroll_limit = $8772 ; G console_01_output_char_proc_reset_scroll_limit
console_01_output_char_stdio_msg_ictl = $8779 ; G console_01_output_char_stdio_msg_ictl
console_01_output_char_stdio_msg_ictl_0 = $8786 ; G console_01_output_char_stdio_msg_ictl
_ioctl_scroll                   = $879E ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_oterm                = $87A2 ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_cursor_coord      = $87A9 ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_cursor_coord         = $87AD ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_cursor_coord         = $87B9 ; L console_01_output_char_stdio_msg_ictl
_ioctl_cls                      = $87CD ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_window_coord      = $87DF ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_window_coord         = $87E6 ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_window_coord         = $87EF ; L console_01_output_char_stdio_msg_ictl
_ioctl_getset_window_rect       = $87FE ; L console_01_output_char_stdio_msg_ictl
_ioctl_set_window_rect          = $880D ; L console_01_output_char_stdio_msg_ictl
_ioctl_get_window_rect          = $880E ; L console_01_output_char_stdio_msg_ictl
console_01_output_char_proc_putchar_scroll_adjust = $8812 ; G console_01_output_char_proc_putchar_scroll_adjust
screen_cleared                  = $881F ; L console_01_output_char_proc_putchar_scroll_adjust
store_y                         = $8820 ; L console_01_output_char_proc_putchar_scroll_adjust
zx_01_output_char_32_iterm_msg_bell = $8824 ; G zx_01_output_char_32_iterm_msg_bell
zx_01_output_char_32_iterm_msg_print_cursor = $8837 ; G zx_01_output_char_32_iterm_msg_print_cursor
cursor                          = $8840 ; L zx_01_output_char_32_iterm_msg_print_cursor
zx_01_output_char_32_oterm_msg_bell = $8848 ; G zx_01_output_char_32_oterm_msg_bell
zx_01_output_char_32_oterm_msg_cls = $885B ; G zx_01_output_char_32_oterm_msg_cls
zx_01_output_char_32_oterm_msg_printc = $886D ; G zx_01_output_char_32_oterm_msg_printc
code_ok                         = $8874 ; L zx_01_output_char_32_oterm_msg_printc
__print_loop                    = $8889 ; L zx_01_output_char_32_oterm_msg_printc
colour_supplied                 = $889C ; L zx_01_output_char_32_oterm_msg_printc
zx_01_output_char_32_oterm_msg_scroll = $88A8 ; G zx_01_output_char_32_oterm_msg_scroll
zx_01_output_char_32_stdio_msg_ictl = $88BD ; G zx_01_output_char_32_stdio_msg_ictl
zx_01_output_char_32_stdio_msg_ictl_0 = $88CA ; G zx_01_output_char_32_stdio_msg_ictl
_ioctl_bcolor                   = $88DD ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_font                     = $88E9 ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_font_ret                 = $88FA ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_fcolor                   = $88FC ; L zx_01_output_char_32_stdio_msg_ictl
_ioctl_fmask                    = $8908 ; L zx_01_output_char_32_stdio_msg_ictl
__code_driver_terminal_output_tail = $8914 ; G 
__code_driver_tty_head          = $8914 ; G 
__code_driver_tty_tail          = $8914 ; G 
__code_error_head               = $8914 ; G 
error_ebdfd_zc                  = $8917 ; G error_ebdfd_zc
error_einval_zc                 = $8917 ; G error_einval_zc
error_enolck_zc                 = $8917 ; G error_enolck_zc
error_enotsup_zc                = $8917 ; G error_enotsup_zc
errno_zc                        = $8919 ; G errno_zc
__ch_system                     = $8925 ; G zcc57513
error_zc                        = $8925 ; G error_zc
error_lzc                       = $892B ; G error_lzc
error_lznc                      = $8932 ; G error_lznc
error_mc                        = $893B ; G error_mc
error_znc                       = $8943 ; G error_znc
error_enotsup_mc                = $894C ; G error_enotsup_mc
errno_mc                        = $894E ; G errno_mc
__code_error_tail               = $8956 ; G 
__code_fcntl_head               = $8956 ; G 
asm_vioctl                      = $8956 ; G asm_vioctl
critical_section                = $8956 ; L asm_vioctl
find_driver_loop                = $8964 ; L asm_vioctl
deliver_message                 = $8974 ; L asm_vioctl
__bool                          = $8988 ; L asm_vioctl
__setf                          = $898F ; L asm_vioctl
forward_ioctl                   = $899A ; L asm_vioctl
__getf                          = $89A3 ; L asm_vioctl
asm_vioctl_driver               = $89AE ; G asm_vioctl
__fcntl_fdchain_descend         = $89CA ; G __fcntl_fdchain_descend
__fcntl_fdstruct_from_fd_2      = $89D1 ; G __fcntl_fdstruct_from_fd_2
__fcntl_fdstruct_from_fd_1      = $89DC ; G __fcntl_fdstruct_from_fd_1
__code_fcntl_tail               = $89F2 ; G 
__code_font_fzx_head            = $89F2 ; G 
__code_font_fzx_tail            = $89F2 ; G 
__code_fp_genmath_head          = $89F2 ; G 
__code_fp_genmath_tail          = $89F2 ; G 
__code_fp_math48_head           = $89F2 ; G 
__code_fp_math48_tail           = $89F2 ; G 
__code_input_head               = $89F2 ; G 
asm_in_inkey                    = $89F2 ; G asm_in_inkey
row_loop                        = $8A05 ; L asm_in_inkey
keyhit_0                        = $8A1E ; L asm_in_inkey
keyhit_1                        = $8A34 ; L asm_in_inkey
check_caps                      = $8A46 ; L asm_in_inkey
check_sym                       = $8A51 ; L asm_in_inkey
ascii                           = $8A5C ; L asm_in_inkey
rowtable                        = $8A5F ; L asm_in_inkey
asm_in_wait_key                 = $8A7F ; G asm_in_wait_key
zx_01_output_char_32_oterm_msg_pause = $8A7F ; G zx_01_output_char_32_oterm_msg_pause
asm_in_test_key                 = $8A85 ; G asm_in_test_key
__code_input_tail               = $8A8D ; G 
__code_inttypes_head            = $8A8D ; G 
__code_inttypes_tail            = $8A8D ; G 
__code_l_head                   = $8A8D ; G 
l_jpix                          = $8A8D ; G l_jpix
__thread_block_timeout          = $8A90 ; G zcc57513
__thread_context_switch         = $8A90 ; G zcc57513
__thread_unblock                = $8A90 ; G zcc57513
l_ret                           = $8A90 ; G l_ret
l_setmem_hl                     = $8AB1 ; G l_setmem_hl
l_inc_sp                        = $8ABA ; G l_inc_sp
l_jphl                          = $8ABB ; G l_jphl
l_offset_ix_de                  = $8ABC ; G l_offset_ix_de
asm_b_array_clear               = $8AC3 ; G asm_b_array_clear
l_zeroword_hl                   = $8AC5 ; G l_zeroword_hl
l_ltu_bc_hl                     = $8ACC ; G l_ltu_bc_hl
l_decu_dehl                     = $8AD2 ; G l_decu_dehl
msw                             = $8AD8 ; L l_decu_dehl
limit                           = $8ADE ; L l_decu_dehl
__code_l_sccz80_head            = $8AE3 ; G 
__code_l_sccz80_tail            = $8AE3 ; G 
__code_l_sdcc_head              = $8AE3 ; G 
__code_l_sdcc_tail              = $8AE3 ; G 
__code_l_tail                   = $8AE3 ; G 
__code_locale_head              = $8AE3 ; G 
__code_locale_tail              = $8AE3 ; G 
__code_math_head                = $8AE3 ; G 
__code_math_tail                = $8AE3 ; G 
__code_network_head             = $8AE3 ; G 
__code_network_tail             = $8AE3 ; G 
__code_nirvanam_head            = $8AE3 ; G 
__code_nirvanam_tail            = $8AE3 ; G 
__code_nirvanap_head            = $8AE3 ; G 
__code_nirvanap_tail            = $8AE3 ; G 
__code_setjmp_head              = $8AE3 ; G 
__code_setjmp_tail              = $8AE3 ; G 
__code_sound_bit_head           = $8AE3 ; G 
asm_bit_beep_raw_di             = $8AE3 ; G asm_bit_beep_raw_di
asm_bit_beep_raw                = $8AEC ; G asm_bit_beep_raw
beeper                          = $8AF0 ; L asm_bit_beep_raw
beixp3                          = $8B04 ; L asm_bit_beep_raw
behllp                          = $8B09 ; L asm_bit_beep_raw
be_again                        = $8B25 ; L asm_bit_beep_raw
be_end                          = $8B29 ; L asm_bit_beep_raw
asm_bit_close                   = $8B2C ; G asm_bit_close
asm_bit_open                    = $8B37 ; G asm_bit_open
__code_sound_bit_tail           = $8B3D ; G 
__code_stdio_head               = $8B3D ; G 
__stdio_nextarg_bc              = $8B3D ; G __stdio_nextarg_bc
__stdio_nextarg_de              = $8B42 ; G __stdio_nextarg_de
__stdio_nextarg_hl              = $8B47 ; G __stdio_nextarg_hl
__code_stdio_tail               = $8B4D ; G 
__code_stdlib_head              = $8B4D ; G 
__code_stdlib_tail              = $8B4D ; G 
__code_string_head              = $8B4D ; G 
asm_memset                      = $8B4D ; G asm_memset
__code_string_tail              = $8B5E ; G 
__code_temp_sp1_head            = $8B5E ; G 
__code_temp_sp1_tail            = $8B5E ; G 
__code_threads_head             = $8B5E ; G 
__code_threads_mutex_head       = $8B5E ; G 
__code_threads_tail             = $8B5E ; G 
asm_mtx_init                    = $8B5E ; G asm_mtx_init
unknown_type                    = $8B78 ; L asm_mtx_init
__code_threads_mutex_tail       = $8B7D ; G 
__code_z80_head                 = $8B7D ; G 
asm_z80_delay_ms                = $8B7D ; G asm_z80_delay_ms
ms_loop                         = $8B7F ; L asm_z80_delay_ms
last_ms                         = $8B8C ; L asm_z80_delay_ms
asm_z80_delay_tstate            = $8B92 ; G asm_z80_delay_tstate
loop                            = $8B99 ; L asm_z80_delay_tstate
g0                              = $8BA7 ; L asm_z80_delay_tstate
g1                              = $8BA8 ; L asm_z80_delay_tstate
b0                              = $8BAC ; L asm_z80_delay_tstate
b1                              = $8BB1 ; L asm_z80_delay_tstate
asm_z80_pop_ei                  = $8BB4 ; G asm_z80_pop_ei
asm0_z80_pop_ei                 = $8BB9 ; G asm_z80_pop_ei
ei_state                        = $8BBC ; L asm_z80_pop_ei
di_state                        = $8BBE ; L asm_z80_pop_ei
asm_z80_push_di                 = $8BC0 ; G asm_z80_push_di
continue                        = $8BD5 ; L asm_z80_push_di
__code_compiler_head            = $8BDC ; G 
__code_lib_head                 = $8BDC ; G 
__code_lib_tail                 = $8BDC ; G 
__code_z80_tail                 = $8BDC ; G 
_ram6                           = $8BDC ; G objects
_main                           = $8BDD ; G objects
__code_compiler_tail            = $8BDE ; G 
__code_user_head                = $8BDE ; G 
__code_user_tail                = $8BDE ; G 
__rodata_clib_head              = $8BDE ; G 
__rodata_clib_tail              = $8BDE ; G 
__rodata_driver_head            = $8BDE ; G 
__rodata_driver_tail            = $8BDE ; G 
__rodata_error_string_end_head  = $8BDE ; G 
__rodata_error_strings_head     = $8BDE ; G 
__rodata_error_strings_tail     = $8BDE ; G 
__rodata_font_head              = $8BDE ; G 
__rodata_font_tail              = $8BDE ; G 
__rodata_error_string_end_tail  = $8BDF ; G 
__rodata_fcntl_head             = $8BDF ; G 
__rodata_fcntl_tail             = $8BDF ; G 
__rodata_font_4x8_head          = $8BDF ; G 
__rodata_font_4x8_tail          = $8BDF ; G 
__rodata_font_8x8_head          = $8BDF ; G 
__rodata_font_8x8_tail          = $8BDF ; G 
__rodata_font_fzx_head          = $8BDF ; G 
__rodata_font_fzx_tail          = $8BDF ; G 
__rodata_input_head             = $8BDF ; G 
in_key_translation_table        = $8BDF ; G in_key_translation_table
__CODE_END_head                 = $8C7F ; G 
__CODE_END_tail                 = $8C7F ; G 
__DATA_head                     = $8C7F ; G 
__rodata_compiler_head          = $8C7F ; G 
__rodata_compiler_tail          = $8C7F ; G 
__rodata_input_tail             = $8C7F ; G 
__rodata_lib_head               = $8C7F ; G 
__rodata_lib_tail               = $8C7F ; G 
__rodata_sound_bit_head         = $8C7F ; G 
__rodata_sound_bit_tail         = $8C7F ; G 
__rodata_stdio_head             = $8C7F ; G 
__rodata_stdio_tail             = $8C7F ; G 
__rodata_stdlib_head            = $8C7F ; G 
__rodata_stdlib_tail            = $8C7F ; G 
__rodata_user_head              = $8C7F ; G 
__rodata_user_tail              = $8C7F ; G 
__DATA_tail                     = $8C80 ; G 
__data_alloc_balloc_head        = $8C80 ; G 
__data_alloc_balloc_tail        = $8C80 ; G 
__data_alloc_malloc_head        = $8C80 ; G 
__data_clib_head                = $8C80 ; G 
__data_clib_tail                = $8C80 ; G 
__data_driver_head              = $8C80 ; G 
__data_driver_tail              = $8C80 ; G 
__data_font_head                = $8C80 ; G 
__data_font_tail                = $8C80 ; G 
__malloc_heap                   = $8C80 ; G zcc57513
__smc_clib_head                 = $8C80 ; G 
__smc_clib_tail                 = $8C80 ; G 
__smc_compiler_head             = $8C80 ; G 
__smc_compiler_tail             = $8C80 ; G 
__smc_driver_head               = $8C80 ; G 
__smc_driver_tail               = $8C80 ; G 
__smc_fcntl_head                = $8C80 ; G 
__smc_fcntl_tail                = $8C80 ; G 
__smc_font_head                 = $8C80 ; G 
__smc_font_tail                 = $8C80 ; G 
__smc_l_head                    = $8C80 ; G 
__smc_l_tail                    = $8C80 ; G 
__smc_lib_head                  = $8C80 ; G 
__smc_lib_tail                  = $8C80 ; G 
__smc_sound_bit_head            = $8C80 ; G 
__smc_sound_bit_tail            = $8C80 ; G 
__smc_user_head                 = $8C80 ; G 
__smc_user_tail                 = $8C80 ; G 
__data_alloc_malloc_tail        = $8C82 ; G 
__data_fcntl_head               = $8C82 ; G 
__stdio_heap                    = $8C82 ; G zcc57513
__data_fcntl_stdio_heap_head_head = $8C84 ; G 
__data_fcntl_tail               = $8C84 ; G 
__stdio_block                   = $8C84 ; L zcc57513
__data_fcntl_stdio_heap_body_head = $8C8A ; G 
__data_fcntl_stdio_heap_head_tail = $8C8A ; G 
__i_fcntl_heap_0                = $8C8A ; L zcc57513
__i_fcntl_fdstruct_0            = $8C90 ; L zcc57513
__edit_buffer_0                 = $8CB3 ; L zcc57513
__i_fcntl_heap_1                = $8CF3 ; L zcc57513
__i_fcntl_fdstruct_1            = $8CF9 ; L zcc57513
__i_fcntl_fdstruct_2            = $8CF9 ; L zcc57513
__i_fcntl_heap_2                = $8D16 ; L zcc57513
__data_fcntl_stdio_heap_body_tail = $8D82 ; G 
__data_fcntl_stdio_heap_tail_head = $8D82 ; G 
__i_fcntl_heap_3                = $8D82 ; L zcc57513
__data_fcntl_fdtable_body_head  = $8D84 ; G 
__data_fcntl_stdio_heap_tail_tail = $8D84 ; G 
__fcntl_fdtbl                   = $8D84 ; G zcc57513
__data_fcntl_fdtable_body_tail  = $8D8A ; G 
__data_sound_bit_head           = $8D8A ; G 
__sound_bit_state               = $8D8A ; G __sound_bit_state
__data_sound_bit_tail           = $8D8B ; G 
__data_stdio_head               = $8D8B ; G 
_stdin                          = $8D8B ; G zcc57513
__i_stdio_file_0                = $8D8D ; L zcc57513
_stdout                         = $8D9C ; G zcc57513
__i_stdio_file_1                = $8D9E ; L zcc57513
_stderr                         = $8DAD ; G zcc57513
__i_stdio_file_2                = $8DAF ; L zcc57513
__stdio_open_file_list          = $8DBE ; G zcc57513
__stdio_closed_file_list        = $8DC0 ; G zcc57513
__data_stdio_tail               = $8DC4 ; G 
__data_stdlib_head              = $8DC4 ; G 
__data_stdlib_tail              = $8DC4 ; G 
__data_threads_head             = $8DC4 ; G 
__thrd_id                       = $8DC4 ; G zcc57513
__BSS_head                      = $8DC5 ; G 
__DATA_END_head                 = $8DC5 ; G 
__DATA_END_tail                 = $8DC5 ; G 
__data_compiler_head            = $8DC5 ; G 
__data_compiler_tail            = $8DC5 ; G 
__data_lib_head                 = $8DC5 ; G 
__data_lib_tail                 = $8DC5 ; G 
__data_threads_tail             = $8DC5 ; G 
__data_user_head                = $8DC5 ; G 
__data_user_tail                = $8DC5 ; G 
__BSS_UNINITIALIZED_head        = $8DC6 ; G 
__BSS_tail                      = $8DC6 ; G 
__sp_or_ret                     = $8DC6 ; L zcc57513
__BSS_UNINITIALIZED_tail        = $8DC8 ; G 
__bss_alloc_balloc_head         = $8DC8 ; G 
__bss_alloc_balloc_tail         = $8DC8 ; G 
__bss_alloc_malloc_head         = $8DC8 ; G 
__bss_alloc_malloc_tail         = $8DC8 ; G 
__bss_arch_head                 = $8DC8 ; G 
__bss_arch_tail                 = $8DC8 ; G 
__bss_clib_head                 = $8DC8 ; G 
__bss_clib_tail                 = $8DC8 ; G 
__bss_compress_aplib_head       = $8DC8 ; G 
__bss_compress_aplib_tail       = $8DC8 ; G 
__bss_driver_head               = $8DC8 ; G 
__bss_driver_tail               = $8DC8 ; G 
__bss_error_head                = $8DC8 ; G 
__bss_font_head                 = $8DC8 ; G 
__bss_font_tail                 = $8DC8 ; G 
_errno                          = $8DC8 ; G _errno
__bss_error_tail                = $8DCA ; G 
__bss_fcntl_head                = $8DCA ; G 
__bss_fcntl_tail                = $8DCA ; G 
__bss_input_head                = $8DCA ; G 
__bss_input_tail                = $8DCA ; G 
__bss_sound_bit_head            = $8DCA ; G 
__bss_sound_bit_tail            = $8DCA ; G 
__bss_stdio_head                = $8DCA ; G 
__bss_stdio_tail                = $8DCA ; G 
__bss_stdlib_head               = $8DCA ; G 
__exit_stack                    = $8DCA ; G zcc57513
__quickexit_stack               = $8DCB ; G zcc57513
__BSS_END_head                  = $8DCC ; G 
__BSS_END_tail                  = $8DCC ; G 
__bss_compiler_head             = $8DCC ; G 
__bss_compiler_tail             = $8DCC ; G 
__bss_lib_head                  = $8DCC ; G 
__bss_lib_tail                  = $8DCC ; G 
__bss_stdlib_tail               = $8DCC ; G 
__bss_string_head               = $8DCC ; G 
__bss_string_tail               = $8DCC ; G 
__bss_user_head                 = $8DCC ; G 
__bss_user_tail                 = $8DCC ; G 
__BANK_06_head                  = $C000 ; G 
_genesis_title                  = $C000 ; G objects
IOCTL_ITERM_CAPS                = $C009 ; G zcc57513
IOCTL_ITERM_COOK                = $C011 ; G zcc57513
IOCTL_OTERM_CRLF                = $C012 ; G zcc57513
IOCTL_OCHAR_CRLF                = $C014 ; G zcc57513
IOCTL_ITERM_LINE                = $C021 ; G zcc57513
IOCTL_OTERM_COOK                = $C022 ; G zcc57513
IOCTL_ITERM_PASS                = $C041 ; G zcc57513
IOCTL_OTERM_PAUSE               = $C042 ; G zcc57513
IOCTL_ITERM_ECHO                = $C081 ; G zcc57513
IOCTL_OTERM_PAGE                = $C082 ; G zcc57513
IOCTL_ITERM_CRLF                = $C101 ; G zcc57513
IOCTL_OTERM_BELL                = $C102 ; G zcc57513
IOCTL_ICHAR_CRLF                = $C103 ; G zcc57513
IOCTL_ITERM_CURS                = $C201 ; G zcc57513
IOCTL_OTERM_SIGNAL              = $C202 ; G zcc57513
_title_hiscores                 = $C3D4 ; G objects
_credits_bkg                    = $C493 ; G objects
__BANK_06_tail                  = $D0BD ; G 
__size                          = $D0BD ; G 
__tail                          = $D0BD ; G 
IOCTL_OTERM_CLEAR               = $E002 ; G zcc57513
TAR__register_sp                = $FF58 ; L zcc57513
__register_sp                   = $FF58 ; L zcc57513
TAR__crt_on_exit                = $30002 ; L zcc57513
__crt_on_exit                   = $30002 ; L zcc57513
__clock_freq                    = $3567E0 ; L asm_z80_delay_ms
__clock_freq                    = $3567E0 ; L zx_01_output_char_32_iterm_msg_bell
__clock_freq                    = $3567E0 ; L zx_01_output_char_32_oterm_msg_bell
