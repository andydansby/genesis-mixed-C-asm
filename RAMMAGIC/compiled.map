TAR__clib_malloc_heap_size      = $FFFFFFFF ; L zcc12555
CLIB_MALLOC_HEAP_SIZE           = $0000 ; L zcc12555
CLIB_OPT_STDIO                  = $0000 ; L zcc12555
CLIB_STDIO_HEAP_SIZE            = $0000 ; L zcc12555
IOCTL_RESET                     = $0000 ; G zcc12555
STDIO_SEEK_SET                  = $0000 ; G zcc12555
TAR__clib_balloc_table_size     = $0000 ; L zcc12555
TAR__clib_exit_stack_size       = $0000 ; L zcc12555
TAR__clib_fopen_max             = $0000 ; L zcc12555
TAR__clib_open_max              = $0000 ; L zcc12555
TAR__clib_quickexit_stack_size  = $0000 ; L zcc12555
TAR__crt_enable_commandline     = $0000 ; L zcc12555
TAR__crt_enable_nmi             = $0000 ; L zcc12555
TAR__crt_enable_restart         = $0000 ; L zcc12555
TAR__crt_enable_rst             = $0000 ; L zcc12555
TAR__crt_include_preamble       = $0000 ; L zcc12555
TAR__crt_initialize_bss         = $0000 ; L zcc12555
TAR__crt_model                  = $0000 ; L zcc12555
TAR__crt_org_bss                = $0000 ; L zcc12555
TAR__crt_org_data               = $0000 ; L zcc12555
__BSS_END_size                  = $0000 ; G 
__BSS_UNINITIALIZED_size        = $0000 ; G 
__CLIB_OPT_ERROR                = $0000 ; L error_edom_mc
__CLIB_OPT_IMATH                = $0000 ; L l_divu_16_16x16
__CLIB_OPT_IMATH                = $0000 ; L l_mulu_16_16x16
__CRTDEF                        = $0000 ; L zcc12555
__DATA_END_size                 = $0000 ; G 
__EOK                           = $0000 ; G zcc12555
__MMAP                          = $0000 ; L zcc12555
__bss_alloc_balloc_size         = $0000 ; G 
__bss_alloc_malloc_size         = $0000 ; G 
__bss_arch_size                 = $0000 ; G 
__bss_clib_size                 = $0000 ; G 
__bss_driver_size               = $0000 ; G 
__bss_fcntl_size                = $0000 ; G 
__bss_font_size                 = $0000 ; G 
__bss_input_size                = $0000 ; G 
__bss_lib_size                  = $0000 ; G 
__bss_sound_bit_size            = $0000 ; G 
__bss_string_size               = $0000 ; G 
__bss_user_size                 = $0000 ; G 
__clib_balloc_table_size        = $0000 ; L zcc12555
__clib_exit_stack_size          = $0000 ; L zcc12555
__clib_fopen_max                = $0000 ; L zcc12555
__clib_malloc_heap_size         = $0000 ; L zcc12555
__clib_open_max                 = $0000 ; L zcc12555
__clib_quickexit_stack_size     = $0000 ; L zcc12555
__clib_stdio_heap_size          = $0000 ; L zcc12555
__code_adt_b_array_size         = $0000 ; G 
__code_adt_b_vector_size        = $0000 ; G 
__code_adt_ba_priority_queue_size = $0000 ; G 
__code_adt_ba_stack_size        = $0000 ; G 
__code_adt_bv_priority_queue_size = $0000 ; G 
__code_adt_bv_stack_size        = $0000 ; G 
__code_adt_p_forward_list_alt_size = $0000 ; G 
__code_adt_p_forward_list_size  = $0000 ; G 
__code_adt_p_list_size          = $0000 ; G 
__code_adt_p_queue_size         = $0000 ; G 
__code_adt_p_stack_size         = $0000 ; G 
__code_adt_w_array_size         = $0000 ; G 
__code_adt_w_vector_size        = $0000 ; G 
__code_adt_wa_priority_queue_size = $0000 ; G 
__code_adt_wa_stack_size        = $0000 ; G 
__code_adt_wv_priority_queue_size = $0000 ; G 
__code_adt_wv_stack_size        = $0000 ; G 
__code_alloc_balloc_size        = $0000 ; G 
__code_alloc_malloc_size        = $0000 ; G 
__code_alloc_obstack_size       = $0000 ; G 
__code_bifrost2_size            = $0000 ; G 
__code_bifrost_h_size           = $0000 ; G 
__code_bifrost_l_size           = $0000 ; G 
__code_clib_size                = $0000 ; G 
__code_compress_zx7_size        = $0000 ; G 
__code_crt_exit_size            = $0000 ; G 
__code_crt_init_size            = $0000 ; G 
__code_ctype_size               = $0000 ; G 
__code_driver_character_input_size = $0000 ; G 
__code_driver_character_output_size = $0000 ; G 
__code_driver_general_size      = $0000 ; G 
__code_driver_memstream_size    = $0000 ; G 
__code_driver_size              = $0000 ; G 
__code_driver_terminal_input_size = $0000 ; G 
__code_driver_terminal_output_size = $0000 ; G 
__code_driver_tty_size          = $0000 ; G 
__code_fcntl_size               = $0000 ; G 
__code_font_fzx_size            = $0000 ; G 
__code_font_size                = $0000 ; G 
__code_fp_genmath_size          = $0000 ; G 
__code_fp_math48_size           = $0000 ; G 
__code_input_size               = $0000 ; G 
__code_inttypes_size            = $0000 ; G 
__code_l_sdcc_size              = $0000 ; G 
__code_lib_size                 = $0000 ; G 
__code_locale_size              = $0000 ; G 
__code_network_size             = $0000 ; G 
__code_nirvanam_size            = $0000 ; G 
__code_nirvanap_size            = $0000 ; G 
__code_setjmp_size              = $0000 ; G 
__code_sound_bit_size           = $0000 ; G 
__code_stdio_size               = $0000 ; G 
__code_stdlib_size              = $0000 ; G 
__code_string_size              = $0000 ; G 
__code_temp_sp1_size            = $0000 ; G 
__code_threads_mutex_size       = $0000 ; G 
__code_threads_size             = $0000 ; G 
__code_z80_size                 = $0000 ; G 
__crt_enable_commandline        = $0000 ; L zcc12555
__crt_enable_restart            = $0000 ; L zcc12555
__crt_include_preamble          = $0000 ; L zcc12555
__crt_initialize_bss            = $0000 ; L zcc12555
__crt_model                     = $0000 ; L zcc12555
__crt_org_bss                   = $0000 ; L zcc12555
__crt_org_data                  = $0000 ; L zcc12555
__data_alloc_balloc_size        = $0000 ; G 
__data_alloc_malloc_size        = $0000 ; G 
__data_clib_size                = $0000 ; G 
__data_driver_size              = $0000 ; G 
__data_fcntl_fdtable_body_size  = $0000 ; G 
__data_fcntl_size               = $0000 ; G 
__data_fcntl_stdio_heap_body_size = $0000 ; G 
__data_fcntl_stdio_heap_head_size = $0000 ; G 
__data_fcntl_stdio_heap_tail_size = $0000 ; G 
__data_font_size                = $0000 ; G 
__data_lib_size                 = $0000 ; G 
__data_stdlib_size              = $0000 ; G 
__data_user_size                = $0000 ; G 
__exit_stack_size               = $0000 ; G zcc12555
__fcntl_fdtbl                   = $0000 ; G zcc12555
__fcntl_fdtbl_size              = $0000 ; G zcc12555
__head                          = $0000 ; G 
__quickexit_stack_size          = $0000 ; G zcc12555
__rodata_clib_size              = $0000 ; G 
__rodata_compiler_size          = $0000 ; G 
__rodata_driver_size            = $0000 ; G 
__rodata_error_strings_size     = $0000 ; G 
__rodata_fcntl_size             = $0000 ; G 
__rodata_font_4x8_size          = $0000 ; G 
__rodata_font_8x8_size          = $0000 ; G 
__rodata_font_fzx_size          = $0000 ; G 
__rodata_font_size              = $0000 ; G 
__rodata_input_size             = $0000 ; G 
__rodata_lib_size               = $0000 ; G 
__rodata_sound_bit_size         = $0000 ; G 
__rodata_stdio_size             = $0000 ; G 
__rodata_stdlib_size            = $0000 ; G 
__rodata_user_size              = $0000 ; G 
__smc_clib_size                 = $0000 ; G 
__smc_compiler_size             = $0000 ; G 
__smc_driver_size               = $0000 ; G 
__smc_fcntl_size                = $0000 ; G 
__smc_font_size                 = $0000 ; G 
__smc_l_size                    = $0000 ; G 
__smc_lib_size                  = $0000 ; G 
__smc_sound_bit_size            = $0000 ; G 
__smc_user_size                 = $0000 ; G 
thrd_success                    = $0000 ; G zcc12555
DEFINED_CLIB_MALLOC_HEAP_SIZE   = $0001 ; L zcc12555
DEFINED_CLIB_OPT_STDIO          = $0001 ; L zcc12555
DEFINED_CLIB_STDIO_HEAP_SIZE    = $0001 ; L zcc12555
DEFINED_CRT_ON_EXIT             = $0001 ; L zcc12555
DEFINED_REGISTER_SP             = $0001 ; L zcc12555
DEFINED_startup                 = $0001 ; L zcc12555
NEED_floatpack                  = $0001 ; L zcc12555
SPRITES_BANK                    = $0001 ; L zcc12553
STDIO_MSG_PUTC                  = $0001 ; G zcc12555
STDIO_SEEK_CUR                  = $0001 ; G zcc12555
TAR__crt_enable_close           = $0001 ; L zcc12555
TAR__crt_enable_eidi            = $0001 ; L zcc12555
_CLIB_CFG_ASM_                  = $0001 ; L error_edom_mc
_CLIB_CFG_ASM_                  = $0001 ; L l_divu_16_16x16
_CLIB_CFG_ASM_                  = $0001 ; L l_mulu_16_16x16
__BSS_size                      = $0001 ; G 
__DATA_size                     = $0001 ; G 
__EACCES                        = $0001 ; G zcc12555
__crt_enable_close              = $0001 ; L zcc12555
__crt_enable_eidi               = $0001 ; L zcc12555
__data_sound_bit_size           = $0001 ; G 
__data_threads_size             = $0001 ; G 
__rodata_error_string_end_size  = $0001 ; G 
mtx_plain                       = $0001 ; G zcc12555
thrd_error                      = $0001 ; G zcc12555
STDIO_MSG_WRIT                  = $0002 ; G zcc12555
STDIO_SEEK_END                  = $0002 ; G zcc12555
__EBADF                         = $0002 ; G zcc12555
__bss_error_size                = $0002 ; G 
__bss_stdio_size                = $0002 ; G 
__bss_stdlib_size               = $0002 ; G 
mtx_recursive                   = $0002 ; G zcc12555
thrd_nomem                      = $0002 ; G zcc12555
STDIO_MSG_GETC                  = $0003 ; G zcc12555
__EBDFD                         = $0003 ; G zcc12555
STDIO_MSG_EATC                  = $0004 ; G zcc12555
__CODE_size                     = $0004 ; G 
__EDOM                          = $0004 ; G zcc12555
__code_crt_main_size            = $0004 ; G 
__code_crt_return_size          = $0004 ; G 
__data_stdio_size               = $0004 ; G 
mtx_timed                       = $0004 ; G zcc12555
thrd_busy                       = $0004 ; G zcc12555
STDIO_MSG_READ                  = $0005 ; G zcc12555
__EFBIG                         = $0005 ; G zcc12555
__bss_compress_aplib_size       = $0005 ; G 
STDIO_MSG_SEEK                  = $0006 ; G zcc12555
__EINVAL                        = $0006 ; G zcc12555
STDIO_MSG_ICTL                  = $0007 ; G zcc12555
TAR__crt_enable_streams         = $0007 ; L zcc12555
__EMFILE                        = $0007 ; G zcc12555
STDIO_MSG_FLSH                  = $0008 ; G zcc12555
__CODE_END_size                 = $0008 ; G 
__ENFILE                        = $0008 ; G zcc12555
thrd_timedout                   = $0008 ; G zcc12555
STDIO_MSG_CLOS                  = $0009 ; G zcc12555
__ENOLCK                        = $0009 ; G zcc12555
__ENOMEM                        = $000A ; G zcc12555
__ENOTSUP                       = $000B ; G zcc12555
__EOVERFLOW                     = $000C ; G zcc12555
__ERANGE                        = $000D ; G zcc12555
__ESTAT                         = $000E ; G zcc12555
ICHAR_MSG_GETC                  = $000F ; G zcc12555
ITERM_MSG_GETC                  = $000F ; G zcc12555
__EAGAIN                        = $000F ; G zcc12555
__EWOULDBLOCK                   = $000F ; G zcc12555
__code_l_size                   = $000F ; G 
ITERM_MSG_INTERRUPT             = $0010 ; G zcc12555
__code_arch_size                = $0010 ; G 
ITERM_MSG_PUTC                  = $0011 ; G zcc12555
ITERM_MSG_PRINT_CURSOR          = $0012 ; G zcc12555
ITERM_MSG_ERASE_CURSOR          = $0013 ; G zcc12555
ITERM_MSG_ERASE_CURSOR_PWD      = $0014 ; G zcc12555
ITERM_MSG_BS                    = $0015 ; G zcc12555
ITERM_MSG_BS_PWD                = $0016 ; G zcc12555
ITERM_MSG_READLINE_BEGIN        = $0017 ; G zcc12555
ITERM_MSG_READLINE_END          = $0018 ; G zcc12555
ITERM_MSG_BELL                  = $0019 ; G zcc12555
OCHAR_MSG_PUTC_BIN              = $001E ; G zcc12555
OTERM_MSG_PUTC                  = $001E ; G zcc12555
__code_error_size               = $001E ; G 
OTERM_MSG_TTY                   = $001F ; G zcc12555
startup                         = $001F ; L zcc12555
OCHAR_MSG_PUTC                  = $0020 ; G zcc12555
OTERM_MSG_PRINTC                = $0020 ; G zcc12555
OTERM_MSG_SCROLL                = $0021 ; G zcc12555
OTERM_MSG_CLS                   = $0022 ; G zcc12555
OTERM_MSG_PAUSE                 = $0023 ; G zcc12555
OTERM_MSG_BELL                  = $0024 ; G zcc12555
OTERM_MSG_PSCROLL               = $0025 ; G zcc12555
__bss_compiler_size             = $0026 ; G 
__data_compiler_size            = $0028 ; G 
LRU_LASTENTRY                   = $002A ; G zcc12553
__code_l_sccz80_size            = $0039 ; G 
__code_crt_common_size          = $0048 ; G 
__code_math_size                = $005B ; G 
__code_compress_aplib_size      = $00F0 ; G 
TAR__clib_stdio_heap_size       = $0100 ; L zcc12555
IOCTL_OTERM_CLS                 = $0102 ; G zcc12555
__CONTENDED_size                = $0156 ; G 
TAR__crt_stack_size             = $0200 ; L zcc12555
IOCTL_ITERM_TIE                 = $0201 ; G zcc12555
__BANK_01_size                  = $0201 ; G 
IOCTL_OTERM_RESET_SCROLL        = $0202 ; G zcc12555
__BANK_03_size                  = $0240 ; G 
IOCTL_ITERM_SET_EDITBUF         = $0301 ; G zcc12555
IOCTL_OTERM_SET_WINDOW_COORD    = $0302 ; G zcc12555
IOCTL_ITERM_GET_EDITBUF         = $0381 ; G zcc12555
IOCTL_OTERM_GET_WINDOW_COORD    = $0382 ; G zcc12555
IOCTL_OTERM_SET_WINDOW_RECT     = $0402 ; G zcc12555
IOCTL_OTERM_GET_WINDOW_RECT     = $0482 ; G zcc12555
IOCTL_OTERM_SET_CURSOR_COORD    = $0502 ; G zcc12555
IOCTL_OTERM_GET_CURSOR_COORD    = $0582 ; G zcc12555
IOCTL_OTERM_GET_OTERM           = $0602 ; G zcc12555
IOCTL_OTERM_SCROLL              = $0702 ; G zcc12555
__code_user_size                = $07F0 ; G 
IOCTL_OTERM_FONT                = $0802 ; G zcc12555
IOCTL_OTERM_FZX_SET_PAPER_COORD = $0A02 ; G zcc12555
IOCTL_OTERM_FZX_GET_PAPER_COORD = $0A82 ; G zcc12555
IOCTL_OTERM_FZX_SET_PAPER_RECT  = $0B02 ; G zcc12555
IOCTL_OTERM_FZX_GET_PAPER_RECT  = $0B82 ; G zcc12555
IOCTL_OTERM_FZX_LEFT_MARGIN     = $0C02 ; G zcc12555
IOCTL_OTERM_FZX_LINE_SPACING    = $0D02 ; G zcc12555
__BANK_00_size                  = $0DA2 ; G 
IOCTL_OTERM_FZX_SPACE_EXPAND    = $0E02 ; G zcc12555
__code_compiler_size            = $0E1E ; G 
IOCTL_OTERM_FZX_SET_FZX_STATE   = $0F02 ; G zcc12555
IOCTL_OTERM_FZX_GET_FZX_STATE   = $0F82 ; G zcc12555
IOCTL_ITERM_SET_DELAY           = $1001 ; G zcc12555
IOCTL_OTERM_FCOLOR              = $1002 ; G zcc12555
IOCTL_ITERM_GET_DELAY           = $1081 ; G zcc12555
__BANK_04_size                  = $10E3 ; G 
IOCTL_ITERM_LASTK               = $1101 ; G zcc12555
IOCTL_OTERM_FMASK               = $1102 ; G zcc12555
IOCTL_OTERM_BCOLOR              = $1202 ; G zcc12555
__UNCONTENDED_size              = $15D0 ; G 
__BANK_06_size                  = $3157 ; G 
__CONTENDED_head                = $6018 ; G 
_depack0                        = $6018 ; G ramALL
objects_zcc12482_apbranch1      = $601B ; L ramALL
objects_zcc12482_aploop0        = $601D ; L ramALL
objects_zcc12482_aploop         = $6020 ; L ramALL
objects_zcc12482_apget4bits     = $6033 ; L ramALL
objects_zcc12482_apwritebyte    = $603D ; L ramALL
objects_zcc12482_apbranch4      = $6041 ; L ramALL
objects_zcc12482_apbranch3      = $604A ; L ramALL
objects_zcc12482_apbranch2      = $605E ; L ramALL
objects_zcc12482_apskip2        = $607D ; L ramALL
objects_zcc12482_apskip3        = $6086 ; L ramALL
objects_zcc12482_ap_finishup    = $6089 ; L ramALL
objects_zcc12482_ap_finishup2   = $608C ; L ramALL
objects_zcc12482_ap_r0_gamma    = $6093 ; L ramALL
objects_zcc12482_ap_getbit      = $609F ; L ramALL
objects_zcc12482_ap_getgamma    = $60AB ; L ramALL
objects_zcc12482_ap_getgammaloop = $60AE ; L ramALL
_interuptSetup                  = $60BB ; G ramALL
_SetIM2                         = $60CE ; G ramALL
_BASICISR                       = $60EF ; G ramALL
_israddr                        = $60FA ; G ramALL
_gameISR1                       = $610A ; G ramALL
_noscreenswitch                 = $6119 ; G ramALL
_switchscreen                   = $6131 ; G ramALL
_setrambank0                    = $613F ; G ramALL
_borderTest                     = $614E ; G ramALL
objects_zcc12482_borderChange   = $615D ; L ramALL
objects_zcc12482_value          = $616D ; L ramALL
__CONTENDED_tail                = $616E ; G 
TAR__crt_org_code               = $8000 ; L zcc12555
_IM2table                       = $8000 ; G zcc12553
__CODE_head                     = $8000 ; G 
__Start                         = $8000 ; G zcc12555
__UNCONTENDED_head              = $8000 ; G 
__crt_org_code                  = $8000 ; L zcc12555
__Restart                       = $8001 ; L zcc12555
__CODE_tail                     = $8004 ; G 
__Restart_2                     = $8004 ; L zcc12555
__code_crt_init_head            = $8004 ; G 
__code_crt_init_tail            = $8004 ; G 
__code_crt_main_head            = $8004 ; G 
__Exit                          = $8007 ; G zcc12555
__code_crt_exit_head            = $8008 ; G 
__code_crt_exit_tail            = $8008 ; G 
__code_crt_main_tail            = $8008 ; G 
__code_crt_return_head          = $8008 ; G 
__code_crt_common_head          = $800C ; G 
__code_crt_return_tail          = $800C ; G 
_bank                           = $800C ; G zcc12553
_copytoAltScreen                = $801B ; G zcc12553
_setrambank1                    = $8027 ; G zcc12553
_switchscreen2                  = $8036 ; G zcc12553
setnormalRAMstate               = $8044 ; L zcc12553
__code_adt_b_array_head         = $8054 ; G 
__code_adt_b_array_tail         = $8054 ; G 
__code_adt_b_vector_head        = $8054 ; G 
__code_adt_b_vector_tail        = $8054 ; G 
__code_adt_ba_priority_queue_head = $8054 ; G 
__code_adt_ba_priority_queue_tail = $8054 ; G 
__code_adt_ba_stack_head        = $8054 ; G 
__code_adt_ba_stack_tail        = $8054 ; G 
__code_adt_bv_priority_queue_head = $8054 ; G 
__code_adt_bv_priority_queue_tail = $8054 ; G 
__code_adt_bv_stack_head        = $8054 ; G 
__code_adt_bv_stack_tail        = $8054 ; G 
__code_adt_p_forward_list_alt_head = $8054 ; G 
__code_adt_p_forward_list_alt_tail = $8054 ; G 
__code_adt_p_forward_list_head  = $8054 ; G 
__code_adt_p_forward_list_tail  = $8054 ; G 
__code_adt_p_list_head          = $8054 ; G 
__code_adt_p_list_tail          = $8054 ; G 
__code_adt_p_queue_head         = $8054 ; G 
__code_adt_p_queue_tail         = $8054 ; G 
__code_adt_p_stack_head         = $8054 ; G 
__code_adt_p_stack_tail         = $8054 ; G 
__code_adt_w_array_head         = $8054 ; G 
__code_adt_w_array_tail         = $8054 ; G 
__code_adt_w_vector_head        = $8054 ; G 
__code_adt_w_vector_tail        = $8054 ; G 
__code_adt_wa_priority_queue_head = $8054 ; G 
__code_adt_wa_priority_queue_tail = $8054 ; G 
__code_adt_wa_stack_head        = $8054 ; G 
__code_adt_wa_stack_tail        = $8054 ; G 
__code_adt_wv_priority_queue_head = $8054 ; G 
__code_adt_wv_priority_queue_tail = $8054 ; G 
__code_adt_wv_stack_head        = $8054 ; G 
__code_adt_wv_stack_tail        = $8054 ; G 
__code_alloc_balloc_head        = $8054 ; G 
__code_alloc_balloc_tail        = $8054 ; G 
__code_alloc_malloc_head        = $8054 ; G 
__code_alloc_malloc_tail        = $8054 ; G 
__code_alloc_obstack_head       = $8054 ; G 
__code_alloc_obstack_tail       = $8054 ; G 
__code_arch_head                = $8054 ; G 
__code_clib_head                = $8054 ; G 
__code_clib_tail                = $8054 ; G 
__code_crt_common_tail          = $8054 ; G 
__code_driver_head              = $8054 ; G 
__code_driver_tail              = $8054 ; G 
__code_font_head                = $8054 ; G 
__code_font_tail                = $8054 ; G 
asm_zx_border                   = $8054 ; G asm_zx_border
zx_border                       = $8054 ; G zx_border
__code_arch_tail                = $8064 ; G 
__code_bifrost2_head            = $8064 ; G 
__code_bifrost2_tail            = $8064 ; G 
__code_bifrost_h_head           = $8064 ; G 
__code_bifrost_h_tail           = $8064 ; G 
__code_bifrost_l_head           = $8064 ; G 
__code_bifrost_l_tail           = $8064 ; G 
__code_compress_aplib_head      = $8064 ; G 
aplib_depack_callee             = $8064 ; G aplib_depack_callee
_apbranch2                      = $806B ; L asm_aplib_depack
_ap_not_zero_gamma              = $808D ; L asm_aplib_depack
_ap_not_LWM                     = $808E ; L asm_aplib_depack
l0                              = $80A3 ; L asm_aplib_depack
l1                              = $80AA ; L asm_aplib_depack
l2                              = $80B2 ; L asm_aplib_depack
_ap_finishup                    = $80BB ; L asm_aplib_depack
_apbranch1                      = $80C2 ; L asm_aplib_depack
asm_aplib_depack                = $80CA ; G asm_aplib_depack
_aploop                         = $80D4 ; L asm_aplib_depack
_apbranch4                      = $80FE ; L asm_aplib_depack
_isrdummy                       = $8101 ; G zcc12553
_ISR_space                      = $8102 ; G zcc12553
_apbranch3                      = $8109 ; L asm_aplib_depack
m0                              = $8113 ; L asm_aplib_depack
_current_screen                 = $811D ; G zcc12553
SprCacheTable                   = $811E ; G zcc12553
__aplib_getbit                  = $812B ; G __aplib_getbit
l0                              = $8136 ; L __aplib_getbit
__aplib_getbitbc                = $813E ; G __aplib_getbitbc
__aplib_getgamma                = $8148 ; G __aplib_getgamma
l0                              = $814B ; L __aplib_getgamma
__code_compress_aplib_tail      = $8154 ; G 
__code_compress_zx7_head        = $8154 ; G 
__code_compress_zx7_tail        = $8154 ; G 
__code_ctype_head               = $8154 ; G 
__code_ctype_tail               = $8154 ; G 
__code_driver_character_input_head = $8154 ; G 
__code_driver_character_input_tail = $8154 ; G 
__code_driver_character_output_head = $8154 ; G 
__code_driver_character_output_tail = $8154 ; G 
__code_driver_general_head      = $8154 ; G 
__code_driver_general_tail      = $8154 ; G 
__code_driver_memstream_head    = $8154 ; G 
__code_driver_memstream_tail    = $8154 ; G 
__code_driver_terminal_input_head = $8154 ; G 
__code_driver_terminal_input_tail = $8154 ; G 
__code_driver_terminal_output_head = $8154 ; G 
__code_driver_terminal_output_tail = $8154 ; G 
__code_driver_tty_head          = $8154 ; G 
__code_driver_tty_tail          = $8154 ; G 
__code_error_head               = $8154 ; G 
__ch_system                     = $8158 ; G zcc12555
error_zc                        = $8158 ; G error_zc
error_divide_by_zero_mc         = $8160 ; G error_divide_by_zero_mc
error_edom_mc                   = $8160 ; G error_edom_mc
errno_mc                        = $8162 ; G errno_mc
error_mc                        = $816D ; G error_mc
__code_error_tail               = $8172 ; G 
__code_fcntl_head               = $8172 ; G 
__code_fcntl_tail               = $8172 ; G 
__code_font_fzx_head            = $8172 ; G 
__code_font_fzx_tail            = $8172 ; G 
__code_fp_genmath_head          = $8172 ; G 
__code_fp_genmath_tail          = $8172 ; G 
__code_fp_math48_head           = $8172 ; G 
__code_fp_math48_tail           = $8172 ; G 
__code_input_head               = $8172 ; G 
__code_input_tail               = $8172 ; G 
__code_inttypes_head            = $8172 ; G 
__code_inttypes_tail            = $8172 ; G 
__code_l_head                   = $8172 ; G 
l_jphl                          = $8172 ; G l_jphl
__thread_block_timeout          = $8174 ; G zcc12555
__thread_context_switch         = $8174 ; G zcc12555
__thread_unblock                = $8174 ; G zcc12555
l_ret                           = $8174 ; G l_ret
l_ltu_hl_de                     = $8175 ; G l_ltu_hl_de
l_ugt                           = $8175 ; G l_ugt
l_ltu_de_hl                     = $817B ; G l_ltu_de_hl
l_ult                           = $817B ; G l_ult
__code_l_sccz80_head            = $8181 ; G 
__code_l_tail                   = $8181 ; G 
l_gchar                         = $8181 ; G l_gchar
l_gchar_sxt                     = $8182 ; G l_gchar
l_sxt                           = $8182 ; G l_sxt
l_gintsp                        = $8187 ; G l_gintsp
l_gint                          = $818A ; G l_gint
l_gintsp_gint                   = $818A ; G l_gintsp
l_gt                            = $818F ; G l_gt
l_lneg                          = $819B ; G l_lneg
l_lt                            = $81A0 ; G l_lt
l_ne                            = $81AC ; G l_ne
l_or                            = $81B3 ; G l_or
__code_l_sccz80_tail            = $81BA ; G 
__code_l_sdcc_head              = $81BA ; G 
__code_l_sdcc_tail              = $81BA ; G 
__code_locale_head              = $81BA ; G 
__code_locale_tail              = $81BA ; G 
__code_math_head                = $81BA ; G 
l_div_u                         = $81BA ; G l_div_u
l_divu_16_16x16                 = $81BB ; G l_divu_16_16x16
l_small_divu_16_16x16           = $81BB ; G l_small_divu_16_16x16
l0_divu_16_16x16                = $81BF ; G l_divu_16_16x16
l0_small_divu_16_16x16          = $81BF ; G l_small_divu_16_16x16
divisor_sixteen_bit             = $81C3 ; L l_small_divu_16_16x16
loop_16_0                       = $81C9 ; L l_small_divu_16_16x16
loop_16_1                       = $81D1 ; L l_small_divu_16_16x16
l_small_divu_16_16x8            = $81DB ; G l_small_divu_16_16x16
l0_small_divu_16_16x8           = $81DF ; G l_small_divu_16_16x16
loop_8_0                        = $81E3 ; L l_small_divu_16_16x16
loop_8_2                        = $81EA ; L l_small_divu_16_16x16
loop_8_1                        = $81EC ; L l_small_divu_16_16x16
divide_zero                     = $81F1 ; L l_small_divu_16_16x16
l_mult                          = $81F5 ; G l_mul
l_mulu_16_16x16                 = $81F5 ; G l_mulu_16_16x16
l_small_mul_16_16x16            = $81F5 ; G l_small_mul_16_16x16
eight_bit_0                     = $8203 ; L l_small_mul_16_16x16
eight_bit_1                     = $8204 ; L l_small_mul_16_16x16
l_small_mul_16_16x8             = $8204 ; G l_small_mul_16_16x16
rejoin                          = $8207 ; L l_small_mul_16_16x16
loop_0                          = $820A ; L l_small_mul_16_16x16
loop_1                          = $8211 ; L l_small_mul_16_16x16
__code_compiler_head            = $8215 ; G 
__code_lib_head                 = $8215 ; G 
__code_lib_tail                 = $8215 ; G 
__code_math_tail                = $8215 ; G 
__code_network_head             = $8215 ; G 
__code_network_tail             = $8215 ; G 
__code_nirvanam_head            = $8215 ; G 
__code_nirvanam_tail            = $8215 ; G 
__code_nirvanap_head            = $8215 ; G 
__code_nirvanap_tail            = $8215 ; G 
__code_setjmp_head              = $8215 ; G 
__code_setjmp_tail              = $8215 ; G 
__code_sound_bit_head           = $8215 ; G 
__code_sound_bit_tail           = $8215 ; G 
__code_stdio_head               = $8215 ; G 
__code_stdio_tail               = $8215 ; G 
__code_stdlib_head              = $8215 ; G 
__code_stdlib_tail              = $8215 ; G 
__code_string_head              = $8215 ; G 
__code_string_tail              = $8215 ; G 
__code_temp_sp1_head            = $8215 ; G 
__code_temp_sp1_tail            = $8215 ; G 
__code_threads_head             = $8215 ; G 
__code_threads_mutex_head       = $8215 ; G 
__code_threads_mutex_tail       = $8215 ; G 
__code_threads_tail             = $8215 ; G 
__code_z80_head                 = $8215 ; G 
__code_z80_tail                 = $8215 ; G 
_ram0                           = $8215 ; G ramALL
_ram1                           = $8216 ; G ramALL
_ram3                           = $8217 ; G ramALL
_ram4                           = $8218 ; G ramALL
_ram6                           = $8219 ; G ramALL
_ramlow                         = $821A ; G ramALL
_borderTester                   = $821B ; G test
i_3                             = $821B ; L test
i_4                             = $822A ; L test
_wtf                            = $822B ; G test
_gameISR                        = $822C ; G test
depack                          = $823B ; L test
apbranch1                       = $823E ; L test
aploop0                         = $8240 ; L test
aploop                          = $8243 ; L test
apget4bits                      = $8256 ; L test
apwritebyte                     = $8260 ; L test
apbranch4                       = $8264 ; L test
apbranch3                       = $826D ; L test
apbranch2                       = $8281 ; L test
apskip2                         = $82A0 ; L test
apskip3                         = $82A9 ; L test
ap_finishup                     = $82AC ; L test
ap_finishup2                    = $82AF ; L test
ap_r0_gamma                     = $82B6 ; L test
ap_getbit                       = $82C2 ; L test
ap_getgamma                     = $82CE ; L test
ap_getgammaloop                 = $82D1 ; L test
_wyz_load_music                 = $82DE ; G test
_wyz_stop_music                 = $82EA ; G test
_wyz_play                       = $82F0 ; G test
_load_level                     = $82F4 ; G test
_move_left                      = $83A4 ; G test
i_8                             = $83E3 ; L test
i_9                             = $83EE ; L test
_move_right                     = $83EF ; G test
i_10                            = $8431 ; L test
i_11                            = $843C ; L test
_move_pingpong                  = $843D ; G test
i_13                            = $8489 ; L test
setrambank                      = $8489 ; L test
i_14                            = $8496 ; L test
i_12                            = $8499 ; L test
drawsprite                      = $84B6 ; L test
i_16                            = $84DB ; L test
i_15                            = $84E8 ; L test
i_17                            = $84E8 ; L test
_move_explosion                 = $84E9 ; G test
i_18                            = $8506 ; L test
i_19                            = $8511 ; L test
_move_none                      = $8512 ; G test
_clean_screen                   = $8513 ; G test
LRU_next                        = $851E ; G zcc12553
LRU_prev                        = $8549 ; G zcc12553
_load_background                = $8559 ; G test
LRU_first                       = $8574 ; G zcc12553
LRU_last                        = $8575 ; G zcc12553
movetop_prev                    = $8576 ; G zcc12553
movetop_next                    = $8577 ; G zcc12553
SCRADD                          = $8578 ; G zcc12553
LINECOUNT                       = $857A ; G zcc12553
SAVE_RAMBANK                    = $857B ; G zcc12553
Multiply_by_96                  = $857C ; G zcc12553
_DrawSpriteList                 = $857D ; G test
i_21                            = $85A5 ; L test
i_23                            = $85AA ; L test
MAP_START                       = $85D0 ; L zcc12553
i_24                            = $862B ; L test
i_25                            = $86A1 ; L test
i_26                            = $8717 ; L test
i_22                            = $871A ; L test
_NewShoot                       = $871B ; G test
i_27                            = $8729 ; L test
i_28                            = $8733 ; L test
i_30                            = $8738 ; L test
i_31                            = $8797 ; L test
i_29                            = $879A ; L test
_NewEnemy                       = $879B ; G test
i_32                            = $87A5 ; L test
i_34                            = $87AA ; L test
i_35                            = $88B8 ; L test
i_33                            = $88BB ; L test
_shoot_hits_enemy               = $88BC ; G test
i_36                            = $88F1 ; L test
i_38                            = $88F6 ; L test
i_41                            = $8998 ; L test
i_42_i_41                       = $899B ; L test
i_44                            = $89BA ; L test
i_45_i_44                       = $89BD ; L test
i_39                            = $89C3 ; L test
i_40                            = $89C3 ; L test
i_43                            = $89C3 ; L test
i_37                            = $89C6 ; L test
_enemy_hits_ship                = $89CA ; G test
i_46                            = $89D4 ; L test
i_48                            = $89D9 ; L test
i_51                            = $8A47 ; L test
i_52_i_51                       = $8A4A ; L test
i_54                            = $8A63 ; L test
i_55_i_54                       = $8A66 ; L test
i_49                            = $8A6C ; L test
i_50                            = $8A6C ; L test
i_53                            = $8A6C ; L test
i_47                            = $8A6F ; L test
_mainMenuSelection              = $8A73 ; G test
i_56                            = $8A7A ; L test
i_60                            = $8A8D ; L test
i_61                            = $8AAA ; L test
i_62                            = $8AB5 ; L test
i_63                            = $8AC0 ; L test
i_64                            = $8ACB ; L test
i_65                            = $8AD6 ; L test
i_59                            = $8AE7 ; L test
i_57                            = $8AEA ; L test
_mainMenu                       = $8AEC ; G test
_borderColor                    = $8AED ; G test
_switchscreen1                  = $8AF1 ; G test
_read_joystick                  = $8AFF ; G test
_initilizeVariables             = $8B0B ; G test
_interupt                       = $8B70 ; G test
_spriteCache                    = $8B74 ; G test
_gamesetup                      = $8B78 ; G test
_junkLoop                       = $8B96 ; G test
i_66                            = $8B96 ; L test
i_68                            = $8B96 ; L test
i_67                            = $8B9C ; L test
_testloop                       = $8B9D ; G test
i_69                            = $8B9D ; L test
i_71                            = $8B9D ; L test
i_72                            = $8BBD ; L test
i_70                            = $8BC0 ; L test
_gameloop                       = $8BC1 ; G test
i_73                            = $8BC1 ; L test
i_75                            = $8BC1 ; L test
i_77                            = $8BE8 ; L test
i_76                            = $8BEB ; L test
i_80                            = $8C10 ; L test
i_79                            = $8C13 ; L test
i_82                            = $8C31 ; L test
i_78                            = $8C48 ; L test
i_81                            = $8C48 ; L test
i_83                            = $8C48 ; L test
i_84                            = $8C48 ; L test
i_86                            = $8C6D ; L test
i_85                            = $8C70 ; L test
i_89                            = $8C95 ; L test
i_88                            = $8C98 ; L test
i_91                            = $8CB6 ; L test
i_87                            = $8CCD ; L test
i_90                            = $8CCD ; L test
i_92                            = $8CCD ; L test
i_93                            = $8CCD ; L test
i_94                            = $8D02 ; L test
i_95                            = $8D02 ; L test
i_97                            = $8D37 ; L test
i_96                            = $8D3E ; L test
i_98                            = $8D3E ; L test
i_100                           = $8D73 ; L test
i_101                           = $8D7A ; L test
i_99                            = $8D7A ; L test
i_102                           = $8D94 ; L test
i_103                           = $8D9E ; L test
i_105                           = $8DA3 ; L test
i_107                           = $8E03 ; L test
i_106                           = $8E04 ; L test
i_109                           = $8E59 ; L test
i_108                           = $8E5A ; L test
i_111                           = $8EAF ; L test
i_110                           = $8EB0 ; L test
i_104                           = $8EB3 ; L test
i_112                           = $8EB3 ; L test
i_113                           = $8EF3 ; L test
i_114                           = $8EFF ; L test
i_115                           = $8F09 ; L test
i_117                           = $8F0E ; L test
i_118                           = $8F9B ; L test
i_119                           = $8F9B ; L test
i_116                           = $8F9E ; L test
i_120                           = $8FBA ; L test
i_121                           = $8FBE ; L test
i_74                            = $8FC1 ; L test
_main                           = $8FC2 ; G test
i_122                           = $8FD2 ; L test
i_124                           = $8FD7 ; L test
i_123                           = $902B ; L test
_DrawMap                        = $9033 ; G zcc12553
__code_compiler_tail            = $9033 ; G 
__code_user_head                = $9033 ; G 
chars_not_zero                  = $9045 ; L zcc12553
dm_save_sp                      = $9047 ; L zcc12553
draw_loopy                      = $9064 ; L zcc12553
draw_loopy_zero                 = $906E ; L zcc12553
draw_loopy_notzero              = $9077 ; L zcc12553
leftmost_loop                   = $909B ; L zcc12553
go_to_center                    = $90B5 ; L zcc12553
draw_center_tiles               = $90BD ; L zcc12553
draw_center_notzero             = $90CC ; L zcc12553
draw_or_left                    = $90E2 ; L zcc12553
draw_direct_rest                = $9108 ; L zcc12553
continue_center_loop            = $9149 ; L zcc12553
draw_loopy_right                = $914F ; L zcc12553
draw_right_zero                 = $9163 ; L zcc12553
draw_right_notzero              = $916C ; L zcc12553
draw_or_rightmost_left          = $9182 ; L zcc12553
rightmost_loop                  = $91B5 ; L zcc12553
draw_next_line                  = $91CF ; L zcc12553
not_second_third                = $91D6 ; L zcc12553
b_not_zero                      = $91DF ; L zcc12553
dm_restoresp                    = $91E7 ; L zcc12553
centertiles                     = $91EB ; L zcc12553
_DrawSprite                     = $91EC ; G zcc12553
SprNotFound                     = $9209 ; L zcc12553
SprInCache                      = $9211 ; L zcc12553
DrawNow                         = $9216 ; L zcc12553
lineloop                        = $9251 ; L zcc12553
mask                            = $9277 ; L zcc12553
data                            = $9279 ; L zcc12553
draw_a1                         = $928E ; L zcc12553
_InsertSpriteInCache            = $9299 ; G zcc12553
insert_lineloop                 = $9332 ; L zcc12553
insert_rotateloop               = $934B ; L zcc12553
insert_skiprotate               = $935B ; L zcc12553
_MoveSpriteToTop                = $9384 ; G zcc12553
_InitSprCacheList               = $93A4 ; G zcc12553
loop_InitSprCache               = $93BD ; L zcc12553
KeyCodes                        = $93CC ; L zcc12553
_SCAN_KEYBOARD                  = $93F4 ; G zcc12553
scan_loop                       = $93FC ; L zcc12553
find_keypress                   = $9400 ; L zcc12553
keyfound                        = $940F ; L zcc12553
waitforrelease                  = $9411 ; L zcc12553
_GET_KEY_STATE                  = $941B ; G zcc12553
loop_get_key                    = $9420 ; L zcc12553
key_pressed                     = $9429 ; L zcc12553
_get_joystick                   = $942C ; G zcc12553
check_sinclair1                 = $9436 ; L zcc12553
check_sinclair2                 = $943F ; L zcc12553
get_joy_redef                   = $9448 ; L zcc12553
get_joy_end                     = $944B ; L zcc12553
read_kempston_joystick          = $944E ; L zcc12553
kempston_right                  = $9453 ; L zcc12553
kempston_left                   = $9459 ; L zcc12553
kempston_down                   = $945F ; L zcc12553
kempston_up                     = $9465 ; L zcc12553
kempston_fire                   = $946B ; L zcc12553
read_sinclair1_joystick         = $9471 ; L zcc12553
sinclair1_fire                  = $9477 ; L zcc12553
sinclair1_up                    = $947D ; L zcc12553
sinclair1_down                  = $9483 ; L zcc12553
sinclair1_right                 = $9489 ; L zcc12553
sinclair1_left                  = $948F ; L zcc12553
read_sinclair2_joystick         = $9495 ; L zcc12553
sinclair2_left                  = $949B ; L zcc12553
sinclair2_right                 = $94A1 ; L zcc12553
sinclair2_down                  = $94A7 ; L zcc12553
sinclair2_up                    = $94AD ; L zcc12553
sinclair2_fire                  = $94B3 ; L zcc12553
read_redefined                  = $94B9 ; L zcc12553
redefined_up                    = $94B9 ; L zcc12553
redefined_down                  = $94C8 ; L zcc12553
redefined_left                  = $94D8 ; L zcc12553
redefined_right                 = $94E8 ; L zcc12553
redefined_fire                  = $94F8 ; L zcc12553
redefined_end                   = $9508 ; L zcc12553
_display_loop                   = $950A ; G zcc12553
waitvblank                      = $950A ; L zcc12553
_ClearMapArea                   = $9530 ; G zcc12553
cma_loop                        = $953D ; L zcc12553
cma_restoresp                   = $955F ; L zcc12553
ClearMapArea2                   = $9564 ; L zcc12553
cma2_loop1                      = $956D ; L zcc12553
cma2_loop2                      = $9586 ; L zcc12553
cma2_loop3                      = $959F ; L zcc12553
cma2_loop4                      = $95B8 ; L zcc12553
__UNCONTENDED_tail              = $95D0 ; G 
__size                          = $95D0 ; G 
__tail                          = $95D0 ; G 
cma2_loop5                      = $95D1 ; L zcc12553
cma2_loop6                      = $95EA ; L zcc12553
cma2_loop7                      = $9603 ; L zcc12553
cma2_loop8                      = $961C ; L zcc12553
cma2_loop11                     = $9635 ; L zcc12553
cma2_loop12                     = $964E ; L zcc12553
cma2_loop13                     = $9667 ; L zcc12553
cma2_loop14                     = $9680 ; L zcc12553
cma2_loop15                     = $9699 ; L zcc12553
cma2_loop16                     = $96B2 ; L zcc12553
cma2_loop17                     = $96CB ; L zcc12553
cma2_loop18                     = $96E4 ; L zcc12553
cma2_restoresp                  = $96FB ; L zcc12553
_DrawGameMap                    = $96FF ; G zcc12553
_funcBorder                     = $972C ; G zcc12553
_unpackMap                      = $9732 ; G zcc12553
_unpackLevelPointer             = $9746 ; G zcc12553
_unpackPointer                  = $9747 ; L zcc12553
_CreaTablaTiles                 = $9748 ; G zcc12553
copiatiles_outerloop            = $9765 ; L zcc12553
copiatiles_innerloop            = $9769 ; L zcc12553
copiatiles_outerloop2           = $9781 ; L zcc12553
copiatiles_innerloop2           = $9785 ; L zcc12553
copiatiles_outerloop3           = $979D ; L zcc12553
copiatiles_innerloop3           = $97A1 ; L zcc12553
copiatiles_outerloop4           = $97B8 ; L zcc12553
copiatiles_innerloop4           = $97BC ; L zcc12553
newshift                        = $97D1 ; L zcc12553
shiftloop                       = $97E3 ; L zcc12553
rotateouter                     = $97ED ; L zcc12553
looprotate                      = $97F2 ; L zcc12553
endCreaTablaTiles               = $981D ; L zcc12553
SaveTablaTiles                  = $9821 ; L zcc12553
__code_user_tail                = $9823 ; G 
__rodata_clib_head              = $9823 ; G 
__rodata_clib_tail              = $9823 ; G 
__rodata_driver_head            = $9823 ; G 
__rodata_driver_tail            = $9823 ; G 
__rodata_error_string_end_head  = $9823 ; G 
__rodata_error_strings_head     = $9823 ; G 
__rodata_error_strings_tail     = $9823 ; G 
__rodata_font_head              = $9823 ; G 
__rodata_font_tail              = $9823 ; G 
_RAM_marker_LOW                 = $9824 ; G ramALL
__CODE_END_head                 = $9824 ; G 
__rodata_compiler_head          = $9824 ; G 
__rodata_compiler_tail          = $9824 ; G 
__rodata_error_string_end_tail  = $9824 ; G 
__rodata_fcntl_head             = $9824 ; G 
__rodata_fcntl_tail             = $9824 ; G 
__rodata_font_4x8_head          = $9824 ; G 
__rodata_font_4x8_tail          = $9824 ; G 
__rodata_font_8x8_head          = $9824 ; G 
__rodata_font_8x8_tail          = $9824 ; G 
__rodata_font_fzx_head          = $9824 ; G 
__rodata_font_fzx_tail          = $9824 ; G 
__rodata_input_head             = $9824 ; G 
__rodata_input_tail             = $9824 ; G 
__rodata_lib_head               = $9824 ; G 
__rodata_lib_tail               = $9824 ; G 
__rodata_sound_bit_head         = $9824 ; G 
__rodata_sound_bit_tail         = $9824 ; G 
__rodata_stdio_head             = $9824 ; G 
__rodata_stdio_tail             = $9824 ; G 
__rodata_stdlib_head            = $9824 ; G 
__rodata_stdlib_tail            = $9824 ; G 
__rodata_user_head              = $9824 ; G 
__rodata_user_tail              = $9824 ; G 
_RAM_marker_MAIN                = $9825 ; G zcc12553
__CODE_END_tail                 = $982C ; G 
__DATA_head                     = $982C ; G 
__DATA_tail                     = $982D ; G 
__data_alloc_balloc_head        = $982D ; G 
__data_alloc_balloc_tail        = $982D ; G 
__data_alloc_malloc_head        = $982D ; G 
__data_alloc_malloc_tail        = $982D ; G 
__data_clib_head                = $982D ; G 
__data_clib_tail                = $982D ; G 
__data_driver_head              = $982D ; G 
__data_driver_tail              = $982D ; G 
__data_fcntl_fdtable_body_head  = $982D ; G 
__data_fcntl_fdtable_body_tail  = $982D ; G 
__data_fcntl_head               = $982D ; G 
__data_fcntl_stdio_heap_body_head = $982D ; G 
__data_fcntl_stdio_heap_body_tail = $982D ; G 
__data_fcntl_stdio_heap_head_head = $982D ; G 
__data_fcntl_stdio_heap_head_tail = $982D ; G 
__data_fcntl_stdio_heap_tail_head = $982D ; G 
__data_fcntl_stdio_heap_tail_tail = $982D ; G 
__data_fcntl_tail               = $982D ; G 
__data_font_head                = $982D ; G 
__data_font_tail                = $982D ; G 
__data_sound_bit_head           = $982D ; G 
__smc_clib_head                 = $982D ; G 
__smc_clib_tail                 = $982D ; G 
__smc_compiler_head             = $982D ; G 
__smc_compiler_tail             = $982D ; G 
__smc_driver_head               = $982D ; G 
__smc_driver_tail               = $982D ; G 
__smc_fcntl_head                = $982D ; G 
__smc_fcntl_tail                = $982D ; G 
__smc_font_head                 = $982D ; G 
__smc_font_tail                 = $982D ; G 
__smc_l_head                    = $982D ; G 
__smc_l_tail                    = $982D ; G 
__smc_lib_head                  = $982D ; G 
__smc_lib_tail                  = $982D ; G 
__smc_sound_bit_head            = $982D ; G 
__smc_sound_bit_tail            = $982D ; G 
__smc_user_head                 = $982D ; G 
__smc_user_tail                 = $982D ; G 
__sound_bit_state               = $982D ; G __sound_bit_state
__data_sound_bit_tail           = $982E ; G 
__data_stdio_head               = $982E ; G 
__stdio_closed_file_list        = $982E ; G zcc12555
__data_stdio_tail               = $9832 ; G 
__data_stdlib_head              = $9832 ; G 
__data_stdlib_tail              = $9832 ; G 
__data_threads_head             = $9832 ; G 
__thrd_id                       = $9832 ; G zcc12555
__data_compiler_head            = $9833 ; G 
__data_lib_head                 = $9833 ; G 
__data_lib_tail                 = $9833 ; G 
__data_threads_tail             = $9833 ; G 
_level_address                  = $9833 ; G test
_enemy_address                  = $9841 ; G test
_keys                           = $9847 ; G test
_movement_funcs                 = $9851 ; G test
__BSS_head                      = $985B ; G 
__DATA_END_head                 = $985B ; G 
__DATA_END_tail                 = $985B ; G 
__data_compiler_tail            = $985B ; G 
__data_user_head                = $985B ; G 
__data_user_tail                = $985B ; G 
__BSS_UNINITIALIZED_head        = $985C ; G 
__BSS_UNINITIALIZED_tail        = $985C ; G 
__BSS_tail                      = $985C ; G 
__aplib_var_bits                = $985C ; G __aplib_var
__bss_alloc_balloc_head         = $985C ; G 
__bss_alloc_balloc_tail         = $985C ; G 
__bss_alloc_malloc_head         = $985C ; G 
__bss_alloc_malloc_tail         = $985C ; G 
__bss_arch_head                 = $985C ; G 
__bss_arch_tail                 = $985C ; G 
__bss_clib_head                 = $985C ; G 
__bss_clib_tail                 = $985C ; G 
__bss_compress_aplib_head       = $985C ; G 
__bss_driver_head               = $985C ; G 
__bss_driver_tail               = $985C ; G 
__bss_font_head                 = $985C ; G 
__bss_font_tail                 = $985C ; G 
__aplib_var_byte                = $985D ; G __aplib_var
__aplib_var_LWM                 = $985E ; G __aplib_var
__aplib_var_R0                  = $985F ; G __aplib_var
__bss_compress_aplib_tail       = $9861 ; G 
__bss_error_head                = $9861 ; G 
_errno                          = $9861 ; G _errno
__bss_error_tail                = $9863 ; G 
__bss_fcntl_head                = $9863 ; G 
__bss_fcntl_tail                = $9863 ; G 
__bss_input_head                = $9863 ; G 
__bss_input_tail                = $9863 ; G 
__bss_sound_bit_head            = $9863 ; G 
__bss_sound_bit_tail            = $9863 ; G 
__bss_stdio_head                = $9863 ; G 
__stdio_open_file_list          = $9863 ; G zcc12555
__bss_stdio_tail                = $9865 ; G 
__bss_stdlib_head               = $9865 ; G 
__exit_stack                    = $9865 ; G zcc12555
__quickexit_stack               = $9866 ; G zcc12555
__bss_compiler_head             = $9867 ; G 
__bss_lib_head                  = $9867 ; G 
__bss_lib_tail                  = $9867 ; G 
__bss_stdlib_tail               = $9867 ; G 
__bss_string_head               = $9867 ; G 
__bss_string_tail               = $9867 ; G 
_active_enemies                 = $9867 ; G test
_frames_to_shoot                = $9867 ; G test
_i                              = $9868 ; G test
_j                              = $9869 ; G test
_length_map                     = $986A ; G test
_shoot_xchar                    = $986C ; G test
_shoot_ychar                    = $986D ; G test
_diff_x                         = $986E ; G test
_diff_y                         = $9870 ; G test
_map_displacement               = $9872 ; G test
_map_xpos                       = $9873 ; G test
_CurLevel_XLength               = $9874 ; G test
_dummy_i2                       = $9875 ; G test
_max_shoots                     = $9877 ; G test
_int_pointer                    = $9878 ; G test
_joy                            = $987A ; G test
_enemy_xchar                    = $987B ; G test
_enemy_ychar                    = $987C ; G test
_ship_x                         = $987D ; G test
_ship_y                         = $987E ; G test
_length_tiles                   = $987F ; G test
_level_pointer                  = $9881 ; G test
_dummy_b                        = $9883 ; G test
_dummy_i                        = $9884 ; G test
_current_e                      = $9886 ; G test
_enemy_active_shoots            = $9888 ; G test
_getk                           = $9888 ; G test
_my_active_shoots               = $9888 ; G test
_new_enemy                      = $9889 ; G test
_speed_x                        = $988A ; G test
_speed_y                        = $988B ; G test
_CurLevel_NTiles                = $988C ; G test
_enemy_locations                = $988C ; G test
__BSS_END_head                  = $988D ; G 
__BSS_END_tail                  = $988D ; G 
__bss_compiler_tail             = $988D ; G 
__bss_user_head                 = $988D ; G 
__bss_user_tail                 = $988D ; G 
TablaTiles                      = $B000 ; L zcc12553
REGISTER_SP                     = $C000 ; L zcc12555
__BANK_00_head                  = $C000 ; G 
__BANK_01_head                  = $C000 ; G 
__BANK_03_head                  = $C000 ; G 
__BANK_04_head                  = $C000 ; G 
__BANK_06_head                  = $C000 ; G 
__register_sp                   = $C000 ; L zcc12555
_background                     = $C000 ; G ramALL
_genesis_title                  = $C000 ; G ramALL
_level1                         = $C000 ; G ramALL
_ship01                         = $C000 ; G ramALL
objects_zcc12443_INTERR         = $C000 ; L ramALL
objects_zcc12443_SONG           = $C001 ; L ramALL
objects_zcc12443_TEMPO          = $C002 ; L ramALL
objects_zcc12443_TTEMPO         = $C003 ; L ramALL
objects_zcc12443_PUNTERO_A      = $C004 ; L ramALL
objects_zcc12443_PUNTERO_B      = $C006 ; L ramALL
objects_zcc12443_PUNTERO_C      = $C008 ; L ramALL
IOCTL_ITERM_CAPS                = $C009 ; G zcc12555
objects_zcc12443_CANAL_A        = $C00A ; L ramALL
objects_zcc12443_CANAL_B        = $C00C ; L ramALL
objects_zcc12443_CANAL_C        = $C00E ; L ramALL
objects_zcc12443_PUNTERO_P_A    = $C010 ; L ramALL
IOCTL_ITERM_COOK                = $C011 ; G zcc12555
IOCTL_OTERM_CRLF                = $C012 ; G zcc12555
objects_zcc12443_PUNTERO_P_B    = $C012 ; L ramALL
IOCTL_OCHAR_CRLF                = $C014 ; G zcc12555
objects_zcc12443_PUNTERO_P_C    = $C014 ; L ramALL
objects_zcc12443_PUNTERO_P_A0   = $C016 ; L ramALL
objects_zcc12443_PUNTERO_P_B0   = $C018 ; L ramALL
objects_zcc12443_PUNTERO_P_C0   = $C01A ; L ramALL
objects_zcc12443_PUNTERO_P      = $C01C ; L ramALL
objects_zcc12443_CANAL_P        = $C01E ; L ramALL
objects_zcc12443_PSG_REG        = $C020 ; L ramALL
IOCTL_ITERM_LINE                = $C021 ; G zcc12555
IOCTL_OTERM_COOK                = $C022 ; G zcc12555
objects_zcc12443_PSG_REG_SEC    = $C02E ; L ramALL
objects_zcc12443_N_SONIDO       = $C03C ; L ramALL
objects_zcc12443_PUNTERO_SONIDO = $C03D ; L ramALL
_WYZ_PLAY                       = $C03F ; G ramALL
_ship02                         = $C040 ; G ramALL
IOCTL_ITERM_PASS                = $C041 ; G zcc12555
IOCTL_OTERM_PAUSE               = $C042 ; G zcc12555
_INICIO                         = $C042 ; G ramALL
objects_zcc12443_INICIA_SONIDO  = $C057 ; L ramALL
_CARGA_CANCION                  = $C066 ; G ramALL
objects_zcc12443_DECODE_SONG    = $C06F ; L ramALL
_enemy01                        = $C080 ; G ramALL
IOCTL_ITERM_ECHO                = $C081 ; G zcc12555
IOCTL_OTERM_PAGE                = $C082 ; G zcc12555
objects_zcc12443_SET_PAUTA      = $C0BE ; L ramALL
_shoot01                        = $C0C0 ; G ramALL
objects_zcc12443_DECODE_CANAL   = $C0D5 ; L ramALL
objects_zcc12443_NO_SILENCIO    = $C0E5 ; L ramALL
objects_zcc12443_NO_PUNTILLO    = $C0EF ; L ramALL
_expl01                         = $C100 ; G ramALL
IOCTL_ITERM_CRLF                = $C101 ; G zcc12555
objects_zcc12443_NO_INSTRUMENTO = $C101 ; L ramALL
IOCTL_OTERM_BELL                = $C102 ; G zcc12555
IOCTL_ICHAR_CRLF                = $C103 ; G zcc12555
objects_zcc12443_NO_ENVOLVENTE  = $C10B ; L ramALL
objects_zcc12443_NO_MODIFICA    = $C118 ; L ramALL
objects_zcc12443_FIN_DEC_CANAL  = $C11F ; L ramALL
objects_zcc12443_GETLEN         = $C124 ; L ramALL
objects_zcc12443_DCBC0          = $C131 ; L ramALL
objects_zcc12443_PLAY           = $C137 ; L ramALL
_expl02                         = $C140 ; G ramALL
objects_zcc12443_PAUTAS         = $C17A ; L ramALL
_expl03                         = $C180 ; G ramALL
objects_zcc12443_REPRODUCE_SONIDO = $C1A5 ; L ramALL
_expl04                         = $C1C0 ; G ramALL
objects_zcc12443_NO_RUIDO       = $C1D3 ; L ramALL
objects_zcc12443_SI_RUIDO       = $C1D5 ; L ramALL
objects_zcc12443_FIN_SONIDO     = $C1DD ; L ramALL
objects_zcc12443_FIN_NOPLAYER   = $C1E2 ; L ramALL
objects_zcc12443_ROUT           = $C1E8 ; L ramALL
objects_zcc12443_ROUT_A0        = $C1E9 ; L ramALL
objects_zcc12443_LOUT           = $C1F2 ; L ramALL
_endmarkerRam1                  = $C200 ; G ramALL
IOCTL_ITERM_CURS                = $C201 ; G zcc12555
__BANK_01_tail                  = $C201 ; G 
IOCTL_OTERM_SIGNAL              = $C202 ; G zcc12555
objects_zcc12443_LOCALIZA_NOTA  = $C20D ; L ramALL
objects_zcc12443_COMANDOS       = $C21A ; L ramALL
_endmarkerRam3                  = $C23F ; G ramALL
__BANK_03_tail                  = $C240 ; G 
objects_zcc12443_COM_EFECTO     = $C244 ; L ramALL
objects_zcc12443_COM_ENVOLVENTE = $C255 ; L ramALL
objects_zcc12443_LNJP0          = $C265 ; L ramALL
objects_zcc12443_NO_FIN_CANAL_A = $C279 ; L ramALL
objects_zcc12443_NO_SILENCIO_A  = $C28F ; L ramALL
objects_zcc12443_FIN_RUTINA     = $C29E ; L ramALL
objects_zcc12443_LOCALIZA_EFECTO = $C29F ; L ramALL
objects_zcc12443_LEJP0          = $C2B7 ; L ramALL
objects_zcc12443_NO_FIN_CANAL_P = $C2CA ; L ramALL
objects_zcc12443_PAUTA          = $C2D1 ; L ramALL
objects_zcc12443_PCAJP0         = $C2E8 ; L ramALL
objects_zcc12443_PCAJP1         = $C2FF ; L ramALL
objects_zcc12443_PCAJP2         = $C314 ; L ramALL
objects_zcc12443_NOTA           = $C320 ; L ramALL
objects_zcc12443_EVOLVENTES     = $C33A ; L ramALL
_STOP_PLAYER                    = $C368 ; G ramALL
objects_zcc12443_EXT_WORD       = $C396 ; L ramALL
objects_zcc12443_TABLA_PAUTAS   = $C3A1 ; L ramALL
objects_zcc12443_PAUTA_1        = $C3AB ; L ramALL
objects_zcc12443_PAUTA_2        = $C3B7 ; L ramALL
objects_zcc12443_PAUTA_3        = $C3C1 ; L ramALL
objects_zcc12443_PAUTA_4        = $C3CC ; L ramALL
_title_hiscores                 = $C3D4 ; G ramALL
objects_zcc12443_PAUTA_5        = $C3D6 ; L ramALL
objects_zcc12443_SONIDO1        = $C3DE ; L ramALL
objects_zcc12443_SONIDO2        = $C3E8 ; L ramALL
objects_zcc12443_SONIDO3        = $C3F2 ; L ramALL
objects_zcc12443_SONIDO4        = $C3F9 ; L ramALL
objects_zcc12443_TABLA_SONIDOS  = $C403 ; L ramALL
objects_zcc12443_TABLA_SONG     = $C40B ; L ramALL
objects_zcc12443_DATOS_NOTAS    = $C40D ; L ramALL
_credits_bkg                    = $C493 ; G ramALL
objects_zcc12443_SONG_1         = $C4B5 ; L ramALL
_enemies1                       = $C65E ; G ramALL
_level2                         = $C6C7 ; G ramALL
objects_zcc12443_BUFFER_DEC     = $C972 ; L ramALL
objects_zcc12443_PUNTERO_EFECTO = $C973 ; L ramALL
objects_zcc12443_CANAL_EFECTOS  = $C975 ; L ramALL
objects_zcc12443_INICIA_EFECTO  = $C976 ; L ramALL
objects_zcc12443_REPRODUCE_EFECTO = $C986 ; L ramALL
objects_zcc12443_RS_CANALC      = $C9BC ; L ramALL
objects_zcc12443_RS_CANALA      = $C9C6 ; L ramALL
objects_zcc12443_RS_CANALB      = $C9D0 ; L ramALL
objects_zcc12443_FIN_EFECTO     = $C9DA ; L ramALL
objects_zcc12443_ASSEMBLE_EFFECT = $C9E0 ; L ramALL
objects_zcc12443_SFX_ENSAMBLE   = $C9EF ; L ramALL
objects_zcc12443_TABLA_EFECTOS  = $C9FD ; L ramALL
objects_zcc12443_EXPLOSION_NAVE = $CA1B ; L ramALL
objects_zcc12443_BLAST          = $CA86 ; L ramALL
objects_zcc12443_ABRE_CAPSULA   = $CB21 ; L ramALL
objects_zcc12443_DANO           = $CB42 ; L ramALL
objects_zcc12443_DISPARO_DOBLE  = $CB53 ; L ramALL
objects_zcc12443_TECLA_INERCIA  = $CB68 ; L ramALL
_enemies2                       = $CB89 ; G ramALL
objects_zcc12443_CAPSULA_RECOGIDA = $CB97 ; L ramALL
objects_zcc12443_DISPARO_SIMPLE = $CBC8 ; L ramALL
objects_zcc12443_JUEGO_START    = $CBDD ; L ramALL
_level3                         = $CBF2 ; G ramALL
objects_zcc12443_DISPARO_TRIPLE = $CC34 ; L ramALL
objects_zcc12443_EXPLOSION_SENCILLA_ORGANICA = $CC49 ; L ramALL
objects_zcc12443_LASER          = $CC70 ; L ramALL
objects_zcc12443_SCORE          = $CC87 ; L ramALL
objects_zcc12443_DISPARO_MULTI  = $CCC8 ; L ramALL
objects_zcc12443_DISPARO_HOMMING = $CCE3 ; L ramALL
objects_zcc12443_depack         = $CCFE ; L ramALL
objects_zcc12443_apbranch1      = $CD01 ; L ramALL
objects_zcc12443_aploop0        = $CD03 ; L ramALL
objects_zcc12443_aploop         = $CD06 ; L ramALL
objects_zcc12443_apget4bits     = $CD19 ; L ramALL
objects_zcc12443_apwritebyte    = $CD23 ; L ramALL
objects_zcc12443_apbranch4      = $CD27 ; L ramALL
objects_zcc12443_apbranch3      = $CD30 ; L ramALL
objects_zcc12443_apbranch2      = $CD44 ; L ramALL
objects_zcc12443_apskip2        = $CD63 ; L ramALL
objects_zcc12443_apskip3        = $CD6C ; L ramALL
objects_zcc12443_ap_finishup    = $CD6F ; L ramALL
objects_zcc12443_ap_finishup2   = $CD72 ; L ramALL
objects_zcc12443_ap_r0_gamma    = $CD79 ; L ramALL
objects_zcc12443_ap_getbit      = $CD85 ; L ramALL
objects_zcc12443_ap_getgamma    = $CD91 ; L ramALL
objects_zcc12443_ap_getgammaloop = $CD94 ; L ramALL
_endmarkerRam0                  = $CDA1 ; G ramALL
__BANK_00_tail                  = $CDA2 ; G 
_enemies3                       = $D079 ; G ramALL
_mainmenu                       = $D0BD ; G ramALL
objects_zcc12403_menu_loop      = $D0D2 ; L ramALL
objects_zcc12403_menu_move_stars = $D0DD ; L ramALL
_endmarkerRam4                  = $D0E2 ; G ramALL
_enemies4                       = $D0E2 ; G ramALL
_enemies5                       = $D0E2 ; G ramALL
_enemies6                       = $D0E2 ; G ramALL
_enemies7                       = $D0E2 ; G ramALL
_level4                         = $D0E2 ; G ramALL
_level5                         = $D0E2 ; G ramALL
_level6                         = $D0E2 ; G ramALL
_level7                         = $D0E2 ; G ramALL
__BANK_04_tail                  = $D0E3 ; G 
objects_zcc12403_menu_nowrap    = $D0EF ; L ramALL
objects_zcc12403_menu_putcredits = $D0F8 ; L ramALL
objects_zcc12403_menu_puthiscores = $D110 ; L ramALL
objects_zcc12403_menu_puttitle  = $D11B ; L ramALL
objects_zcc12403_menu_nochange  = $D137 ; L ramALL
objects_zcc12403_menu_nofirepressed = $D150 ; L ramALL
objects_zcc12403_menu_inertia_off = $D177 ; L ramALL
objects_zcc12403_menu_check_sound = $D182 ; L ramALL
objects_zcc12403_menu_continue  = $D192 ; L ramALL
objects_zcc12403_menu_display_inertia_status = $D1B2 ; L ramALL
objects_zcc12403_menu_display_sound_status = $D1C4 ; L ramALL
objects_zcc12403_menu_print_music_and_sound = $D1D0 ; L ramALL
objects_zcc12403_menu_print_sfxonly = $D1DC ; L ramALL
objects_zcc12403_menu_print_musiconly = $D1E8 ; L ramALL
objects_zcc12403_menu_print_silence = $D1F4 ; L ramALL
objects_zcc12403_start_inertia_off = $D200 ; L ramALL
objects_zcc12403_screen_to_show = $D20C ; L ramALL
objects_zcc12403_timer          = $D20D ; L ramALL
objects_zcc12403_hiscore_names  = $D20E ; L ramALL
objects_zcc12403_hiscore_values = $D244 ; L ramALL
objects_zcc12403_hiscore_string = $D250 ; L ramALL
_check_hiscore                  = $D255 ; G ramALL
objects_zcc12403_loop_hiscores  = $D25A ; L ramALL
objects_zcc12403_nohiscore_found = $D26A ; L ramALL
objects_zcc12403_hiscore_found  = $D26B ; L ramALL
objects_zcc12403_pushscore_loop = $D278 ; L ramALL
objects_zcc12403_hiscore_last   = $D297 ; L ramALL
objects_zcc12403_hiscore_pushed = $D29D ; L ramALL
objects_zcc12403_findname_loop  = $D2A7 ; L ramALL
objects_zcc12403_foundname      = $D2CC ; L ramALL
objects_zcc12403_readloop       = $D2F7 ; L ramALL
objects_zcc12403_read_exit      = $D309 ; L ramALL
objects_zcc12403_read_noenter   = $D312 ; L ramALL
objects_zcc12403_read_checkzero = $D332 ; L ramALL
objects_zcc12403_read_checkdelete = $D336 ; L ramALL
objects_zcc12403_read_deletepressed = $D33A ; L ramALL
objects_zcc12403_read_continue  = $D344 ; L ramALL
_showhiscores                   = $D34E ; G ramALL
objects_zcc12403_showhiscores_loop = $D357 ; L ramALL
objects_zcc12403_printhi        = $D3E2 ; L ramALL
_divide_large                   = $D418 ; G ramALL
objects_zcc12403_divide_loop    = $D41C ; L ramALL
objects_zcc12403_divide_completed = $D425 ; L ramALL
objects_zcc12403_decompose_5digit = $D427 ; L ramALL
objects_zcc12403_anim_frame     = $D44F ; L ramALL
objects_zcc12403_selected_joystick = $D450 ; L ramALL
objects_zcc12403_inertia_cheat  = $D451 ; L ramALL
objects_zcc12403_check_firepress = $D452 ; L ramALL
objects_zcc12403_read_sinclair1_joystick = $D452 ; L ramALL
objects_zcc12403_sinclair1_fire = $D458 ; L ramALL
objects_zcc12403_read_sinclair2_joystick = $D463 ; L ramALL
objects_zcc12403_read_kempston  = $D474 ; L ramALL
objects_zcc12403_read_keyb      = $D489 ; L ramALL
objects_zcc12403_no_fire        = $D499 ; L ramALL
objects_zcc12403_key_i_pressed  = $D49B ; L ramALL
objects_zcc12403_check_cheats   = $D49C ; L ramALL
objects_zcc12403_cheat_pressed  = $D4AD ; L ramALL
objects_zcc12403_no_cheat_pressed = $D4BC ; L ramALL
objects_zcc12403_key_s_pressed  = $D4C6 ; L ramALL
objects_zcc12403_check_sound    = $D4C7 ; L ramALL
objects_zcc12403_sound_pressed  = $D4D8 ; L ramALL
objects_zcc12403_no_sound_pressed = $D4E8 ; L ramALL
objects_zcc12403_genstars       = $D4F2 ; L ramALL
objects_zcc12403_genpixels      = $D505 ; L ramALL
objects_zcc12403_genpix_shiftloop = $D50B ; L ramALL
objects_zcc12403_generate_starfield = $D515 ; L ramALL
objects_zcc12403_erase_starfield = $D558 ; L ramALL
objects_zcc12403_EraseLoop      = $D580 ; L ramALL
objects_zcc12403_erase_donterase = $D5AC ; L ramALL
objects_zcc12403_move_starfield = $D5B5 ; L ramALL
objects_zcc12403_updateslow_loop = $D5BE ; L ramALL
objects_zcc12403_updatemedium_loop = $D5D2 ; L ramALL
objects_zcc12403_updatefast_loop = $D5EA ; L ramALL
objects_zcc12403_starfield_variable = $D602 ; L ramALL
objects_zcc12403_display_starfield = $D603 ; L ramALL
objects_zcc12403_DisplayLoop    = $D63D ; L ramALL
objects_zcc12403_disp_dontdraw  = $D669 ; L ramALL
objects_zcc12403_starsx_slow    = $D679 ; L ramALL
objects_zcc12403_starsx_medium  = $D699 ; L ramALL
objects_zcc12403_starsx_fast    = $D6B9 ; L ramALL
objects_zcc12403_starsy_slow    = $D6D9 ; L ramALL
objects_zcc12403_starsy_medium  = $D6F9 ; L ramALL
objects_zcc12403_starsy_fast    = $D719 ; L ramALL
objects_zcc12403_stars_pixels_slow = $D739 ; L ramALL
objects_zcc12403_stars_pixels_medium = $D759 ; L ramALL
objects_zcc12403_stars_pixels_fast = $D779 ; L ramALL
objects_zcc12403_star_anim      = $D799 ; L ramALL
objects_zcc12403_anim_order     = $D819 ; L ramALL
objects_zcc12403_DrawStarAnim   = $D861 ; L ramALL
objects_zcc12403_dr_chooseanimpos = $D872 ; L ramALL
objects_zcc12403_noadd          = $D876 ; L ramALL
_PrintTile                      = $D8AF ; G ramALL
objects_zcc12403_TileScAddress  = $D8DF ; L ramALL
_CalcScreenPos                  = $D90F ; G ramALL
objects_zcc12403_shiftloop      = $D935 ; L ramALL
objects_zcc12403_postloop       = $D939 ; L ramALL
objects_zcc12403_depack         = $D93B ; L ramALL
objects_zcc12403_apbranch1      = $D93E ; L ramALL
objects_zcc12403_aploop0        = $D940 ; L ramALL
objects_zcc12403_aploop         = $D943 ; L ramALL
objects_zcc12403_apget4bits     = $D956 ; L ramALL
objects_zcc12403_apwritebyte    = $D960 ; L ramALL
objects_zcc12403_apbranch4      = $D964 ; L ramALL
objects_zcc12403_apbranch3      = $D96D ; L ramALL
objects_zcc12403_apbranch2      = $D981 ; L ramALL
objects_zcc12403_apskip2        = $D9A0 ; L ramALL
objects_zcc12403_apskip3        = $D9A9 ; L ramALL
objects_zcc12403_ap_finishup    = $D9AC ; L ramALL
objects_zcc12403_ap_finishup2   = $D9AF ; L ramALL
objects_zcc12403_ap_r0_gamma    = $D9B6 ; L ramALL
objects_zcc12403_ap_getbit      = $D9C2 ; L ramALL
objects_zcc12403_ap_getgamma    = $D9CE ; L ramALL
objects_zcc12403_ap_getgammaloop = $D9D1 ; L ramALL
objects_zcc12403_rand_seed      = $D9DE ; L ramALL
objects_zcc12403_rand           = $D9E0 ; L ramALL
_CalcScreenPos_Char             = $D9FD ; G ramALL
_PrintNumber                    = $DA15 ; G ramALL
objects_zcc12403_printnum_loop  = $DA2A ; L ramALL
_PrintString                    = $DA31 ; G ramALL
objects_zcc12403_string_outerloop = $DA35 ; L ramALL
objects_zcc12403_string_innerloop = $DA4C ; L ramALL
objects_zcc12403_string_on      = $DA5A ; L ramALL
objects_zcc12403_string_off     = $DA5D ; L ramALL
objects_zcc12403_string_silence = $DA60 ; L ramALL
objects_zcc12403_string_music_and_fx = $DA6D ; L ramALL
objects_zcc12403_string_music   = $DA7A ; L ramALL
objects_zcc12403_string_fx      = $DA87 ; L ramALL
objects_zcc12403_charfont       = $DA94 ; L ramALL
objects_zcc12403_numfont        = $DB94 ; L ramALL
objects_zcc12403_KeyCodes       = $DBE4 ; L ramALL
objects_zcc12403__SCAN_KEYBOARD = $DC0C ; L ramALL
objects_zcc12403_scan_loop      = $DC14 ; L ramALL
objects_zcc12403_find_keypress  = $DC18 ; L ramALL
objects_zcc12403_keyfound       = $DC27 ; L ramALL
objects_zcc12403_waitforrelease = $DC29 ; L ramALL
objects_zcc12403_fire_pressed_wait = $DC33 ; L ramALL
objects_zcc12403_sound_selection = $DC34 ; L ramALL
objects_zcc12403__move_left     = $DC35 ; L ramALL
objects_zcc12403_goneleft       = $DC41 ; L ramALL
_move_left_expire               = $DC49 ; G ramALL
objects_zcc12403_goneleft4      = $DC59 ; L ramALL
objects_zcc12403__move_right    = $DC61 ; L ramALL
objects_zcc12403_goneright      = $DC70 ; L ramALL
objects_zcc12403__move_pingpong = $DC78 ; L ramALL
objects_zcc12403_pingpong_left  = $DC84 ; L ramALL
objects_zcc12403_pingpong_goneleft = $DC8E ; L ramALL
objects_zcc12403_pingpong_right = $DC97 ; L ramALL
objects_zcc12403_pingpong_goneright = $DCA4 ; L ramALL
_move_pingpong_final4           = $DCAC ; G ramALL
objects_zcc12403_pingpong4_left = $DCB8 ; L ramALL
objects_zcc12403_pingpong4_goneleft = $DCC2 ; L ramALL
objects_zcc12403_pingpong4_right = $DCCB ; L ramALL
objects_zcc12403_pingpong4_goneright = $DCD8 ; L ramALL
objects_zcc12403__move_explosion = $DCE0 ; L ramALL
objects_zcc12403_end_explosion  = $DCEF ; L ramALL
_move_furby                     = $DCF6 ; G ramALL
objects_zcc12403_furby_goneleft = $DD04 ; L ramALL
objects_zcc12403_furby_animate  = $DD0D ; L ramALL
objects_zcc12403_furby_anim4    = $DD22 ; L ramALL
objects_zcc12403_furby_anim3    = $DD37 ; L ramALL
objects_zcc12403_furby_anim2    = $DD4C ; L ramALL
objects_zcc12403_furby_anim1    = $DD6E ; L ramALL
_move_kamikaze                  = $DD87 ; G ramALL
objects_zcc12403_kamikaze_goneleft = $DD95 ; L ramALL
objects_zcc12403_kamikaze_moveiny = $DD9E ; L ramALL
objects_zcc12403_kamikaze_movedown = $DDA8 ; L ramALL
objects_zcc12403_kamikaze_moveup = $DDAA ; L ramALL
objects_zcc12403_kamikaze_animate = $DDB5 ; L ramALL
objects_zcc12403_kamikaze_noinc = $DDC2 ; L ramALL
_move_homing                    = $DDDB ; G ramALL
objects_zcc12403_homing_goneright = $DDEC ; L ramALL
objects_zcc12403_homing_moveiny = $DDF5 ; L ramALL
objects_zcc12403_homing_multiplyby12 = $DE03 ; L ramALL
objects_zcc12403_homing_nomultiply = $DE07 ; L ramALL
objects_zcc12403_homing_movedown = $DE0C ; L ramALL
objects_zcc12403_homing_moveup  = $DE0E ; L ramALL
_move_wave                      = $DE19 ; G ramALL
objects_zcc12403_wave_initialized = $DE25 ; L ramALL
objects_zcc12403_wave_goneleft  = $DE47 ; L ramALL
_move_leftanim                  = $DE4D ; G ramALL
objects_zcc12403_anim_initialized = $DE58 ; L ramALL
objects_zcc12403_leftanim_goneleft = $DE6A ; L ramALL
objects_zcc12403_leftanim_update = $DE73 ; L ramALL
objects_zcc12403_leftanim_nottoupdate = $DE8F ; L ramALL
objects_zcc12403_leftanim_noswitchside = $DEA2 ; L ramALL
_move_upleft                    = $DEAD ; G ramALL
objects_zcc12403_goneleft2      = $DEC0 ; L ramALL
objects_zcc12403_goneup         = $DEC1 ; L ramALL
_move_upright                   = $DEC5 ; G ramALL
objects_zcc12403_goneright2     = $DEDA ; L ramALL
objects_zcc12403_goneup2        = $DEE2 ; L ramALL
_move_downleft                  = $DEE6 ; G ramALL
objects_zcc12403_goneleft3      = $DEFC ; L ramALL
objects_zcc12403_gonedown       = $DEFD ; L ramALL
_move_downright                 = $DF01 ; G ramALL
objects_zcc12403_goneright3     = $DF1A ; L ramALL
objects_zcc12403_gonedown2      = $DF1B ; L ramALL
_move_up                        = $DF1F ; G ramALL
objects_zcc12403_goneup3        = $DF2C ; L ramALL
_move_target                    = $DF30 ; G ramALL
objects_zcc12403_target_incx    = $DF3A ; L ramALL
objects_zcc12403_target_decx    = $DF55 ; L ramALL
objects_zcc12403_target_movey   = $DF6F ; L ramALL
objects_zcc12403_target_incy    = $DF76 ; L ramALL
objects_zcc12403_target_decy    = $DF90 ; L ramALL
objects_zcc12403_target_gonedown = $DFAB ; L ramALL
objects_zcc12403_target_goneleft = $DFAB ; L ramALL
objects_zcc12403_target_goneright = $DFAB ; L ramALL
objects_zcc12403_target_goneup  = $DFAB ; L ramALL
objects_zcc12403_move_kamikaze_noanim = $DFB0 ; L ramALL
objects_zcc12403_kamikaze2_goneleft = $DFBE ; L ramALL
objects_zcc12403_kamikaze2_moveiny = $DFC7 ; L ramALL
objects_zcc12403_kamikaze2_movedown = $DFD0 ; L ramALL
objects_zcc12403_kamikaze2_moveup = $DFD2 ; L ramALL
_move_wave_nogoneleft           = $DFDD ; G ramALL
objects_zcc12403_wave2_initialized = $DFE9 ; L ramALL
IOCTL_OTERM_CLEAR               = $E002 ; G zcc12555
objects_zcc12403_move_missile   = $E009 ; L ramALL
objects_zcc12403_missile_goup   = $E018 ; L ramALL
objects_zcc12403_missile_goneup = $E028 ; L ramALL
objects_zcc12403_missile_goleft = $E02D ; L ramALL
objects_zcc12403_missile_goleftalready = $E036 ; L ramALL
objects_zcc12403_missile_goneleft2 = $E043 ; L ramALL
objects_zcc12403_missile_goupleft = $E048 ; L ramALL
objects_zcc12403_missile_goupleftalready = $E051 ; L ramALL
objects_zcc12403_missile_goneleft = $E065 ; L ramALL
objects_zcc12403_missile_goneup2 = $E066 ; L ramALL
objects_zcc12403_missile_incparam2 = $E06A ; L ramALL
objects_zcc12403_move_kamikaze_2 = $E072 ; L ramALL
objects_zcc12403_kamikaze3_goneleft = $E080 ; L ramALL
objects_zcc12403_kamikaze3_moveiny = $E089 ; L ramALL
objects_zcc12403_kamikaze3_movedown = $E093 ; L ramALL
objects_zcc12403_kamikaze3_moveup = $E095 ; L ramALL
objects_zcc12403_kamikaze3_animate = $E0A0 ; L ramALL
objects_zcc12403_kamikaze3_noinc = $E0AC ; L ramALL
objects_zcc12403_move_find_enemy_to_follow = $E0B5 ; L ramALL
objects_zcc12403_find_loop      = $E0CD ; L ramALL
objects_zcc12403_find_found     = $E0DB ; L ramALL
objects_zcc12403_find_already_initialized = $E0E7 ; L ramALL
objects_zcc12403_find_not_found = $E0EA ; L ramALL
objects_zcc12403_move_follow_right = $E0F1 ; L ramALL
objects_zcc12403_fright_loop2   = $E103 ; L ramALL
objects_zcc12403_move_follow_down = $E116 ; L ramALL
objects_zcc12403_fdown_loop     = $E128 ; L ramALL
objects_zcc12403_move_follow_downright = $E13B ; L ramALL
objects_zcc12403_fdownright_loop = $E14D ; L ramALL
objects_zcc12403_move_left_accel = $E162 ; L ramALL
objects_zcc12403_goneleft_accel = $E172 ; L ramALL
objects_zcc12403_move_right_accel = $E17A ; L ramALL
objects_zcc12403_goneright_accel = $E18D ; L ramALL
objects_zcc12403_move_none      = $E195 ; L ramALL
objects_zcc12403__new_e         = $E196 ; L ramALL
_calcdirectshoot                = $E19E ; G ramALL
objects_zcc12403_x_negative     = $E1A6 ; L ramALL
objects_zcc12403_x_positive     = $E1AB ; L ramALL
objects_zcc12403_y_negative     = $E1B0 ; L ramALL
objects_zcc12403_y_positive     = $E1B5 ; L ramALL
objects_zcc12403_dx_greater_dy  = $E1BB ; L ramALL
objects_zcc12403_dy_greater_dx  = $E1D4 ; L ramALL
objects_zcc12403_dy_is_zero     = $E1F1 ; L ramALL
_Div8                           = $E1FC ; G ramALL
objects_zcc12403_Div8_Loop      = $E1FF ; L ramALL
objects_zcc12403_Div8_NoAdd     = $E206 ; L ramALL
_behav_none                     = $E20D ; G ramALL
_behav_shoot_left               = $E20E ; G ramALL
_behav_shoot_left_Y             = $E235 ; G ramALL
objects_zcc12403_y_nocarry      = $E248 ; L ramALL
_behav_shoot_left_wait          = $E270 ; G ramALL
_behav_shoot_target_left        = $E298 ; G ramALL
objects_zcc12403_check_third_shoot_left = $E2A7 ; L ramALL
objects_zcc12403_check_second_shoot_left = $E2AE ; L ramALL
objects_zcc12403_check_first_shoot_left = $E2B5 ; L ramALL
objects_zcc12403_left_new_shoot = $E2BA ; L ramALL
_behav_shoot_target_right       = $E2E2 ; G ramALL
objects_zcc12403_check_third_shoot_right = $E2F4 ; L ramALL
objects_zcc12403_check_second_shoot_right = $E2FB ; L ramALL
objects_zcc12403_check_first_shoot_right = $E302 ; L ramALL
objects_zcc12403_right_new_shoot = $E307 ; L ramALL
_behav_shoot_target             = $E32C ; G ramALL
_behav_powerup                  = $E380 ; G ramALL
_behav_turret                   = $E3B2 ; G ramALL
objects_zcc12403_turret_carry   = $E3B9 ; L ramALL
objects_zcc12403_turret_nocarry = $E3C3 ; L ramALL
objects_zcc12403_turret_center  = $E3CB ; L ramALL
objects_zcc12403_turret_done    = $E3CD ; L ramALL
objects_zcc12403_check_third_shoot_turret = $E3E4 ; L ramALL
objects_zcc12403_check_second_shoot_turret = $E3EB ; L ramALL
objects_zcc12403_check_first_shoot_turret = $E3F2 ; L ramALL
objects_zcc12403_turret_new_shoot = $E3F7 ; L ramALL
_behav_asteroid                 = $E441 ; G ramALL
_behav_fenemy1                  = $E456 ; G ramALL
objects_zcc12403_inc_f1_defeated = $E490 ; L ramALL
objects_zcc12403_final1_start   = $E495 ; L ramALL
objects_zcc12403_notgenerated_1 = $E4EF ; L ramALL
objects_zcc12403_dec_behav_param_1 = $E4F6 ; L ramALL
objects_zcc12403_move_rest_final1 = $E4F7 ; L ramALL
_behav_fenemy4                  = $E507 ; G ramALL
objects_zcc12403_inc_f4_defeated = $E551 ; L ramALL
objects_zcc12403_final4_start   = $E556 ; L ramALL
objects_zcc12403_final4_generatesecond = $E5A0 ; L ramALL
objects_zcc12403_notgenerated   = $E5DE ; L ramALL
objects_zcc12403_dec_behav_param = $E5E5 ; L ramALL
objects_zcc12403_move_rest_final4 = $E5E6 ; L ramALL
_behav_fenemy2                  = $E601 ; G ramALL
objects_zcc12403_inc_f2_defeated = $E63B ; L ramALL
objects_zcc12403_final2_start   = $E640 ; L ramALL
objects_zcc12403_nochangedirection_final2 = $E66E ; L ramALL
objects_zcc12403_doshoot_final2 = $E674 ; L ramALL
objects_zcc12403_shoot1_final2  = $E69A ; L ramALL
objects_zcc12403_shoot2_final2  = $E6DB ; L ramALL
objects_zcc12403_shoot2_skip1   = $E714 ; L ramALL
objects_zcc12403_shoot2_skip2   = $E73A ; L ramALL
objects_zcc12403_shoot2_done    = $E775 ; L ramALL
objects_zcc12403_shooting_final2 = $E776 ; L ramALL
objects_zcc12403_restore_sprites_final2 = $E77D ; L ramALL
objects_zcc12403_move_rest_final2 = $E79B ; L ramALL
_behav_fenemy3                  = $E7D9 ; G ramALL
objects_zcc12403_inc_f3_defeated = $E813 ; L ramALL
objects_zcc12403_final3_start   = $E818 ; L ramALL
objects_zcc12403_shoot1_final3  = $E849 ; L ramALL
objects_zcc12403_dec_behav_param_3 = $E893 ; L ramALL
objects_zcc12403_make_kamikaze_final3 = $E8A9 ; L ramALL
objects_zcc12403_make_goleft_final3 = $E8B1 ; L ramALL
objects_zcc12403_make_goright_final3 = $E8B9 ; L ramALL
objects_zcc12403_move_rest_final3 = $E8BF ; L ramALL
objects_zcc12403_noadjust_final3 = $E8CC ; L ramALL
_behav_saltarin                 = $E8EA ; G ramALL
objects_zcc12403_saltarin_notjumping = $E8F4 ; L ramALL
objects_zcc12403_saltarin_carry = $E8FA ; L ramALL
objects_zcc12403_saltarin_nocarry = $E8FC ; L ramALL
objects_zcc12403_saltarin_jump  = $E8FF ; L ramALL
objects_zcc12403_saltarin_alreadyjumping = $E90B ; L ramALL
objects_zcc12403_saltarin_anim2 = $E92E ; L ramALL
objects_zcc12403_saltarin_anim3 = $E931 ; L ramALL
objects_zcc12403_saltarin_anim1 = $E934 ; L ramALL
objects_zcc12403_saltarin_goingdown = $E937 ; L ramALL
objects_zcc12403_saltarin_gonedown = $E941 ; L ramALL
_behav_saltarin_bis             = $E945 ; G ramALL
objects_zcc12403_saltarinbis_notjumping = $E94F ; L ramALL
objects_zcc12403_saltarinbis_carry = $E955 ; L ramALL
objects_zcc12403_saltarinbis_nocarry = $E957 ; L ramALL
objects_zcc12403_saltarinbis_jump = $E95A ; L ramALL
objects_zcc12403_saltarinbis_alreadyjumping = $E966 ; L ramALL
objects_zcc12403_saltarinbis_anim2 = $E989 ; L ramALL
objects_zcc12403_saltarinbis_anim3 = $E98C ; L ramALL
objects_zcc12403_saltarinbis_anim1 = $E98F ; L ramALL
objects_zcc12403_saltarinbis_goingdown = $E992 ; L ramALL
objects_zcc12403_saltarinbis_gonedown = $E99C ; L ramALL
_behav_casco                    = $E9A0 ; G ramALL
objects_zcc12403_casco_moveagain = $E9B0 ; L ramALL
objects_zcc12403_casco_shoot    = $E9BD ; L ramALL
objects_zcc12403_casco_storeandcont = $E9ED ; L ramALL
_behav_casco_bis                = $E9EF ; G ramALL
objects_zcc12403_cascobis_moveagain = $E9FF ; L ramALL
objects_zcc12403_cascobis_shoot = $EA0C ; L ramALL
objects_zcc12403_cascobis_storeandcont = $EA3C ; L ramALL
_behav_egg                      = $EA3E ; G ramALL
_behav_uglyguy                  = $EA56 ; G ramALL
objects_zcc12403_ugluguy_nochange = $EA64 ; L ramALL
_behav_fenemy5                  = $EA6B ; G ramALL
objects_zcc12403_inc_f5_defeated = $EAA5 ; L ramALL
objects_zcc12403_final5_start   = $EAAA ; L ramALL
objects_zcc12403_shoot_final5   = $EADB ; L ramALL
objects_zcc12403_dec_behav_param_5 = $EAFB ; L ramALL
objects_zcc12403_make_stop_final5 = $EB1F ; L ramALL
objects_zcc12403_make_godownleft_final5 = $EB23 ; L ramALL
objects_zcc12403_make_goupright_final5 = $EB2E ; L ramALL
objects_zcc12403_make_goleft_final5 = $EB36 ; L ramALL
objects_zcc12403_make_goright_final5 = $EB3E ; L ramALL
objects_zcc12403_make_goup_final5 = $EB46 ; L ramALL
objects_zcc12403_make_godown_final5 = $EB4E ; L ramALL
objects_zcc12403_move_rest_final5 = $EB59 ; L ramALL
_behav_fenemy6                  = $EB7D ; G ramALL
objects_zcc12403_inc_f6_defeated = $EBB7 ; L ramALL
objects_zcc12403_final6_start   = $EBBC ; L ramALL
objects_zcc12403_final6_animate_still = $EBDE ; L ramALL
objects_zcc12403_final6_animate1 = $EBE3 ; L ramALL
objects_zcc12403_final6_animate2 = $EBE8 ; L ramALL
objects_zcc12403_final6_animate3 = $EBED ; L ramALL
objects_zcc12403_final6_storeanimation = $EBEF ; L ramALL
objects_zcc12403_shoot_final6   = $EC1C ; L ramALL
objects_zcc12403_shoot_final6_lowenergy = $EC61 ; L ramALL
objects_zcc12403_shoot_final6_low_skip1 = $ECAB ; L ramALL
objects_zcc12403_shoot_final6_low_skip2 = $ECF7 ; L ramALL
objects_zcc12403_inc_behav_param_6 = $ECF9 ; L ramALL
objects_zcc12403_make_stop_final6 = $ED1B ; L ramALL
objects_zcc12403_make_godownleft_final6 = $ED1F ; L ramALL
objects_zcc12403_make_goupleft_final6 = $ED2A ; L ramALL
objects_zcc12403_make_goleft_final6 = $ED35 ; L ramALL
objects_zcc12403_make_goright_final6 = $ED3D ; L ramALL
objects_zcc12403_make_goleft2_final6 = $ED45 ; L ramALL
objects_zcc12403_move_rest_final6 = $ED4D ; L ramALL
_behav_follow                   = $ED71 ; G ramALL
objects_zcc12403_follow_loop    = $ED82 ; L ramALL
_behav_final1_l7                = $EDA1 ; G ramALL
objects_zcc12403_notgenerated_f1_l7 = $EDE2 ; L ramALL
objects_zcc12403_inc_behav_param_final1_l7 = $EDE4 ; L ramALL
_behav_fenemy7                  = $EDE6 ; G ramALL
objects_zcc12403_inc_f7_defeated = $EE20 ; L ramALL
objects_zcc12403_final7_start   = $EE25 ; L ramALL
objects_zcc12403_final7_shoot4  = $EE65 ; L ramALL
objects_zcc12403_final7_shoot4_skip1 = $EEAF ; L ramALL
objects_zcc12403_final7_shoot4_skip2 = $EEFB ; L ramALL
objects_zcc12403_final7_shoot4_skip3 = $EF47 ; L ramALL
objects_zcc12403_final7_shoot3  = $EF4C ; L ramALL
objects_zcc12403_final7_shoot3_skip1 = $EF76 ; L ramALL
objects_zcc12403_final7_shoot3_skip2 = $EF93 ; L ramALL
objects_zcc12403_final7_shoot3_skip3 = $EFB3 ; L ramALL
objects_zcc12403_final7_shoot3_skip4 = $EFD0 ; L ramALL
objects_zcc12403_final7_shoot2  = $EFDB ; L ramALL
objects_zcc12403_final7_shoot2_skip1 = $F00B ; L ramALL
objects_zcc12403_final7_shoot2_skip2 = $F025 ; L ramALL
objects_zcc12403_final7_shoot1  = $F038 ; L ramALL
objects_zcc12403_final7_shoot1_skip1 = $F074 ; L ramALL
objects_zcc12403_final7_shoot1_skip2 = $F094 ; L ramALL
objects_zcc12403_inc_behav_param_7 = $F09C ; L ramALL
objects_zcc12403_make_stop_final7 = $F0CB ; L ramALL
objects_zcc12403_make_wave_final7 = $F0CF ; L ramALL
objects_zcc12403_make_goleft_final7 = $F0DA ; L ramALL
objects_zcc12403_make_goright_final7 = $F0E2 ; L ramALL
objects_zcc12403_make_downleft_final7 = $F0EA ; L ramALL
objects_zcc12403_make_upleft_final7 = $F0F5 ; L ramALL
objects_zcc12403_make_upright_final7 = $F100 ; L ramALL
objects_zcc12403_make_downright_final7 = $F108 ; L ramALL
objects_zcc12403_move_rest_final7 = $F113 ; L ramALL
objects_zcc12403_rand_seed1     = $F137 ; L ramALL
_rand1                          = $F139 ; G ramALL
_endmarkerRam6                  = $F156 ; G ramALL
__BANK_06_tail                  = $F157 ; G 
TAR__register_sp                = $FF58 ; L zcc12555
CRT_ON_EXIT                     = $10001 ; L zcc12555
__crt_on_exit                   = $10001 ; L zcc12555
TAR__crt_on_exit                = $30002 ; L zcc12555
